{"version":3,"file":"static/js/2661.354d0869.chunk.js","mappings":"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","sources":["views/employee/timeList.js","views/employee/AddTimeList.js","views/employee/timeSettings.js","views/employee/addEmployer.js","views/employee/employeeList.js","views/employee/Addsetting.js","views/employee/settings.js","views/employee/employee.js","../node_modules/@coreui/react/src/components/card/CCardTitle.tsx","../node_modules/@coreui/react/src/components/form/CFormCheck.tsx","../node_modules/@coreui/react/src/components/form/CFormSwitch.tsx","../node_modules/@coreui/react/src/components/image/CImage.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { CCard, CCardHeader, CCardBody, CImage, CButton, CFormLabel,CRow,CCol,CFormInput,CFormSelect } from '@coreui/react';\r\nimport timeList from './photos/timelist.png'\r\nconst EmployeeList = () => {\r\n    const [importVisible, setImportVisible] = useState(false);\r\n    const [visible, setVisible] = useState(false);\r\n\r\n    const toggleImportModal = () => {\r\n        setImportVisible(!importVisible);\r\n    };\r\n\r\n    const handleModal = () => {\r\n        setVisible(!visible);\r\n    };\r\n\r\n    return (\r\n        <main className='mx-2 mt-2 '>\r\n            <CCard>\r\n                <CCardHeader>Цагийн жагсаалт</CCardHeader>\r\n                <CCardBody className='text-center'>\r\n               \r\n                <CRow className='mb-3'>\r\n                        <CCol xs=\"auto\">\r\n                            <CFormLabel htmlFor=\"startDate\">Эхлэх огноо</CFormLabel>\r\n                            <CFormInput type=\"date\" id=\"startDate\" name=\"startDate\" />\r\n                        </CCol>\r\n                        <CCol xs=\"auto\">\r\n                            <CFormLabel htmlFor=\"endDate\">Дуусах огноо</CFormLabel>\r\n                            <CFormInput type=\"date\" id=\"endDate\" name=\"endDate\" />\r\n                        </CCol>\r\n                        <CCol xs=\"auto\">\r\n                            <CFormLabel htmlFor=\"employeeSelect\">Ажилчин</CFormLabel>\r\n                            <CFormSelect id=\"employeeSelect\" name=\"employee\">\r\n                                <option value=\"employee1\">Ажилчин 1</option>\r\n                                <option value=\"employee2\">Ажилчин 2</option>\r\n                                <option value=\"employee3\">Ажилчин 3</option>\r\n                            </CFormSelect>\r\n                        </CCol>\r\n                        <CCol xs=\"auto\">\r\n                            <CFormLabel htmlFor=\"branchSelect\">Салбар</CFormLabel>\r\n                            <CFormSelect id=\"branchSelect\" name=\"branch\">\r\n                                <option value=\"branch1\">Салбар 1</option>\r\n                                <option value=\"branch2\">Салбар 2</option>\r\n                                <option value=\"branch3\">Салбар 3</option>\r\n                            </CFormSelect>\r\n                        </CCol>\r\n                    </CRow>\r\n                    <CImage\r\n                        src={timeList} // Ensure `product` is imported or defined\r\n                        rounded\r\n                        thumbnail\r\n                        width={200}\r\n                        height={200}\r\n                        className=\"mb-2\"\r\n                        style={{ border: 'none' }}\r\n                    />\r\n                    <div className='d-flex flex-column align-items-center'>\r\n                        <CFormLabel className='fs-2'>Цагын жагсаалт</CFormLabel>\r\n                       \r\n                    </div>\r\n                    <div className='d-flex flex-column align-items-center'>\r\n                        <CButton color='primary' className='my-2' onClick={handleModal}>\r\n                            +Жагсаалт нэмэх\r\n                        </CButton>\r\n                    \r\n                    </div>\r\n                </CCardBody> \r\n            </CCard>\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default EmployeeList;\r\n","import React from 'react';\r\nimport { CCard, CCardHeader, CCardBody, CButton, CFormLabel, CImage, CCardTitle, CFormInput, CCol, CRow, CFormSelect } from '@coreui/react';\r\nimport time from './photos/icons8-time-50.png';\r\n\r\nconst AddTimeList = () => {\r\n    return (\r\n        <CCard style={{ maxWidth: '800px', width: '100%' }}>\r\n         \r\n            <CCardBody>\r\n                <CRow>\r\n                    <CCol md=\"6\">\r\n                        <CImage\r\n                            src={time}\r\n                            rounded\r\n                            thumbnail\r\n                            className=\"mb-2\"\r\n                            style={{ border: 'none' }}\r\n                        />\r\n                        <div className='mb-3'>\r\n                            <CFormLabel>Ажилчин</CFormLabel>\r\n                            <CFormSelect>\r\n                                <option>Ажилчин 1</option>\r\n                                <option>Ажилчин 2</option>\r\n                                <option>Ажилчин 3</option>\r\n                                {/* Add more options as needed */}\r\n                            </CFormSelect>\r\n                        </div>\r\n                        <div className='mb-3'>\r\n                            <CFormLabel>Салбар</CFormLabel>\r\n                            <CFormSelect>\r\n                                <option>Салбар 1</option>\r\n                                <option>Салбар 2</option>\r\n                                <option>Салбар 3</option>\r\n                                {/* Add more options as needed */}\r\n                            </CFormSelect>\r\n                        </div>\r\n                        <div className='mb-3'>\r\n                            <CFormLabel>Эхлэх огноо</CFormLabel>\r\n                            <CFormInput type=\"date\" />\r\n                        </div>\r\n                        <div className='mb-3'>\r\n                            <CFormLabel>Дуусах огноо</CFormLabel>\r\n                            <CFormInput type=\"date\" />\r\n                        </div>\r\n                        <div className='mb-3'>\r\n                            <CFormLabel>Өдөрт ажиллах цаг</CFormLabel>\r\n                            <CFormInput />\r\n                        </div>\r\n                        <div className='mb-3'>\r\n                            <CFormLabel>Нийт ажиллах цаг</CFormLabel>\r\n                            <CFormInput />\r\n                        </div>\r\n                    </CCol>\r\n                </CRow>\r\n                <div className='text-center'>\r\n                    <CButton color='secondary' className='mt-3' onClick={() => window.history.back()}>\r\n                        Болих\r\n                    </CButton>\r\n                    <CButton color='primary' className='mt-3'>\r\n                        Хадгалах\r\n                    </CButton>\r\n                </div>\r\n            </CCardBody>\r\n        </CCard>\r\n    );\r\n};\r\n\r\nexport default AddTimeList;\r\n","import React, { useState } from 'react';\r\nimport { CCard, CCardHeader, CCardBody, CImage, CButton, CFormLabel, CRow, CCol, CFormInput, CFormSelect, CModal, CModalBody, CModalHeader, CModalTitle } from '@coreui/react';\r\nimport time from './photos/time.png';\r\nimport AddTimeList from './AddTimeList';\r\n\r\nconst TimeSettings = () => {\r\n    const [showTimeSetting, setShowTimeSetting] = useState(false);\r\n\r\n    const handleModal = () => {\r\n        setShowTimeSetting(!showTimeSetting);\r\n    };\r\n\r\n    return (\r\n        <main className='mx-2 mt-2'>\r\n            <CCard>\r\n                <CCardHeader>Цагийн тохиргоо</CCardHeader>\r\n                <CCardBody className='text-center'>\r\n                    <CRow className='mb-3'>\r\n                        <CCol xs=\"auto\">\r\n                            <CFormLabel htmlFor=\"startDate\">Эхлэх огноо</CFormLabel>\r\n                            <CFormInput type=\"date\" id=\"startDate\" name=\"startDate\" />\r\n                        </CCol>\r\n                        <CCol xs=\"auto\">\r\n                            <CFormLabel htmlFor=\"endDate\">Дуусах огноо</CFormLabel>\r\n                            <CFormInput type=\"date\" id=\"endDate\" name=\"endDate\" />\r\n                        </CCol>\r\n                        <CCol xs=\"auto\">\r\n                            <CFormLabel htmlFor=\"employeeSelect\">Ажилчин</CFormLabel>\r\n                            <CFormSelect id=\"employeeSelect\" name=\"employee\">\r\n                                <option value=\"employee1\">Ажилчин 1</option>\r\n                                <option value=\"employee2\">Ажилчин 2</option>\r\n                                <option value=\"employee3\">Ажилчин 3</option>\r\n                            </CFormSelect>\r\n                        </CCol>\r\n                        <CCol xs=\"auto\">\r\n                            <CFormLabel htmlFor=\"branchSelect\">Салбар</CFormLabel>\r\n                            <CFormSelect id=\"branchSelect\" name=\"branch\">\r\n                                <option value=\"branch1\">Салбар 1</option>\r\n                                <option value=\"branch2\">Салбар 2</option>\r\n                                <option value=\"branch3\">Салбар 3</option>\r\n                            </CFormSelect>\r\n                        </CCol>\r\n                    </CRow>\r\n                    <CImage\r\n                        src={time}\r\n                        rounded\r\n                        thumbnail\r\n                        width={200}\r\n                        height={200}\r\n                        className=\"mb-2\"\r\n                        style={{ border: 'none' }}\r\n                    />\r\n                    <div className='d-flex flex-column align-items-center'>\r\n                        <CFormLabel className='fs-2'>Цагын тохиргоо</CFormLabel>\r\n                    </div>\r\n                    <div className='d-flex flex-column align-items-center'>\r\n                        <CButton color='primary' className='my-2' onClick={handleModal}>\r\n                            +Тохиргоо нэмэх\r\n                        </CButton>\r\n                    </div>\r\n                </CCardBody>\r\n            </CCard>\r\n\r\n            <CModal\r\n                visible={showTimeSetting}\r\n                onClose={handleModal}\r\n                size=\"lg\"\r\n            >\r\n                <CModalHeader>\r\n                    <CModalTitle>Цагын тохиргоо нэмэх</CModalTitle>\r\n                </CModalHeader>\r\n                <CModalBody>\r\n                    <AddTimeList />\r\n                </CModalBody>\r\n            </CModal>\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default TimeSettings;\r\n","import { CButton, CCard, CCardBody, CCardHeader, CCardTitle, CCol, CFormInput, CFormLabel, CRow } from '@coreui/react';\r\n\r\nconst AddEmployeeList = () => {\r\n    return (\r\n        <main className='d-flex justify-content-center mt-2'>\r\n            <CCard style={{ maxWidth: '800px', width: '100%' }}>\r\n                <CCardHeader>\r\n                    <CCardTitle>Ажилчин нэмэх</CCardTitle>\r\n                </CCardHeader>\r\n                <CCardBody>\r\n                    <CRow>\r\n                        <CCol md=\"6\">\r\n                            <div className='mb-3'>\r\n                                <CFormLabel>Нэр</CFormLabel>\r\n                                <CFormInput />\r\n                            </div>\r\n                            <div className='mb-3'>\r\n                                <CFormLabel>И-майл</CFormLabel>\r\n                                <CFormInput />\r\n                            </div>\r\n                            <div className='mb-3'>\r\n                                <CFormLabel>Нууц үг</CFormLabel>\r\n                                <CFormInput type=\"password\" />\r\n                            </div>\r\n                            <div className='mb-3'>\r\n                                <CFormLabel>Утас</CFormLabel>\r\n                                <CFormInput />\r\n                            </div>\r\n                            <div className='mb-3'>\r\n                                <CFormLabel>Эрх</CFormLabel>\r\n                                <CFormInput />\r\n                            </div>\r\n                        </CCol>\r\n                        <CCol md=\"6\" className='d-flex flex-column align-items-center justify-content-center'>\r\n                            <CFormLabel>Зураг оруулах</CFormLabel>\r\n                            <div style={{\r\n                                border: '2px dashed #ccc',\r\n                                borderRadius: '8px',\r\n                                width: '200px',\r\n                                height: '200px',\r\n                                display: 'flex',\r\n                                alignItems: 'center',\r\n                                justifyContent: 'center',\r\n                                cursor: 'pointer'\r\n                            }}>\r\n                                <label htmlFor=\"upload-photo\" className=\"btn btn-primary m-0\">\r\n                                    Зураг нэмэх\r\n                                </label>\r\n                            </div>\r\n                            <input\r\n                                type=\"file\"\r\n                                id=\"upload-photo\"\r\n                                name=\"upload-photo\"\r\n                                style={{ display: 'none' }}\r\n                            />\r\n                        </CCol>\r\n                    </CRow>\r\n                    <div className='text-center'>\r\n                        <CButton color='primary' className='mt-3'>\r\n                            Ажилчин нэмэх\r\n                        </CButton>\r\n                    </div>\r\n                </CCardBody>\r\n            </CCard>\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default AddEmployeeList;\r\n","import { CButton, CCard, CCardBody, CCardHeader, CCardTitle, CFormLabel, CImage } from '@coreui/react';\r\nimport { useState } from 'react';\r\nimport AddEmployeeList from './addEmployer'; // Import the AddEmployeeList component\r\nimport employee from './photos/team.png';\r\n\r\nconst EmployeeList = () => {\r\n    const [showAddEmployee, setShowAddEmployee] = useState(false);\r\n\r\n    const handleAddEmployeeClick = () => {\r\n        setShowAddEmployee(!showAddEmployee);\r\n    };\r\n\r\n    return (\r\n        <main className='mx-2 mt-2'>\r\n            {!showAddEmployee ? (\r\n                <CCard>\r\n                    <CCardHeader>\r\n                        <CCardTitle>Ажилчин</CCardTitle>\r\n                    </CCardHeader>\r\n                    <CCardBody className='text-center'>\r\n                        <CImage\r\n                            src={employee}\r\n                            rounded\r\n                            thumbnail\r\n                            width={200}\r\n                            height={200}\r\n                            className=\"mb-2\"\r\n                            style={{ border: 'none' }}\r\n                        />\r\n                        <div className='d-flex flex-column align-items-center'>\r\n                            <CFormLabel className='fs-2'>Ажилчин</CFormLabel>\r\n                        </div>\r\n                        <div className='d-flex flex-column align-items-center'>\r\n                            <CButton color='primary' className='my-2' onClick={handleAddEmployeeClick}>\r\n                                Ажилчин нэмэх\r\n                            </CButton>\r\n                        </div>\r\n                    </CCardBody>\r\n                </CCard>\r\n            ) : (\r\n                <AddEmployeeList />\r\n            )}\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default EmployeeList;\r\n","import React, { useState } from 'react';\r\nimport { CCard, CCardHeader, CCardBody, CButton, CImage, CFormLabel, CCardTitle, CFormInput, CCol, CRow, CFormSwitch, CFormCheck } from '@coreui/react';\r\nimport phone from './photos/icons8-phone-50.png';\r\nimport graph from './photos/icons8-graph-50.png';\r\n\r\nconst Addsetting = () => {\r\n    const [isPostChecked, setIsPostChecked] = useState(false);\r\n    const [isBackOfficeChecked, setIsBackOfficeChecked] = useState(false);\r\n\r\n    // Handle the change in the ПОС toggle\r\n    const handlePostToggleChange = (e) => {\r\n        setIsPostChecked(e.target.checked);\r\n    };\r\n\r\n    // Handle the change in the Back office toggle\r\n    const handleBackOfficeToggleChange = (e) => {\r\n        setIsBackOfficeChecked(e.target.checked);\r\n    };\r\n\r\n    return (\r\n        <main className='d-flex justify-content-center mt-2'>\r\n            <CCard style={{ maxWidth: '800px', width: '100%' }}>\r\n                <CCardHeader>\r\n                    <CCardTitle>Эрхийн тохиргоо нэмэх</CCardTitle>\r\n                </CCardHeader>\r\n                <CCardBody>\r\n                    <CRow>\r\n                        <CCol md=\"6\">\r\n                            <div className='mb-3'>\r\n                                <CFormLabel>Нэр</CFormLabel>\r\n                                <CFormInput />\r\n                            </div>\r\n\r\n                            {/* ПОС Section */}\r\n                            <CRow className='align-items-center mb-3'>\r\n                                <CCol xs=\"auto\">\r\n                                    <CImage\r\n                                        src={phone}\r\n                                        rounded\r\n                                        thumbnail\r\n                                        className=\"mb-2\"\r\n                                        style={{ border: 'none' }}\r\n                                    />\r\n                                </CCol>\r\n                                <CCol className='d-flex justify-content-between '>\r\n                                    <div>\r\n                                        <CFormLabel className='fs-2'>ПОС</CFormLabel>\r\n                                        <CFormLabel className='mt-2'>Ажилтнууд ПИН код ашиглан програм руу нэвтэрнэ</CFormLabel>\r\n                                    </div>\r\n                                    <CFormSwitch id=\"toggle1\" checked={isPostChecked} onChange={handlePostToggleChange} />\r\n                                </CCol>\r\n                            </CRow>\r\n\r\n                            {isPostChecked && (\r\n                                <div>\r\n                                    <CFormCheck id=\"flexCheckDefault1\" label=\"Бүх борлуулатыг харах\" />\r\n                                    <CFormCheck id=\"flexCheckDefault2\" label=\"Хөнгөлөлт ашиглах\" />\r\n                                    <CFormCheck id=\"flexCheckDefault3\" label=\"Борлуулалт болон татвар өөрчлөх\" />\r\n                                    <CFormCheck id=\"flexCheckDefault4\" label=\"Буцаалт авах\" />\r\n                                    <CFormCheck id=\"flexCheckDefault5\" label=\"Бүх нээлттэй захиалгыг удирдах\" />\r\n                                    <CFormCheck id=\"flexCheckDefault6\" label=\"Нээлттэй захиалгыг хүчингүй болгох\" />\r\n                                    <CFormCheck id=\"flexCheckDefault7\" label=\"Ээлжийн тайлан харах\" />\r\n                                    <CFormCheck id=\"flexCheckDefault8\" label=\"Мөнгөний шургуулга нээх\" />\r\n                                    <CFormCheck id=\"flexCheckDefault9\" label=\"Баримт дахин хэвлэх\" />\r\n                                    <CFormCheck id=\"flexCheckDefault10\" label=\"Баримт бүртгэх\" />\r\n                                    <CFormCheck id=\"flexCheckDefault11\" label=\"Тохиргоо өөрчлөх\" />\r\n                                    <CFormCheck id=\"flexCheckDefault12\" label=\"Чатад хандах\" />\r\n                                    <CFormCheck id=\"flexCheckDefault13\" label=\"Чатад хариу өгөх\" />\r\n                                </div>\r\n                            )}\r\n\r\n                            {/* Back office Section */}\r\n                            <CRow className='align-items-center mb-3'>\r\n                                <CCol xs=\"auto\">\r\n                                    <CImage\r\n                                        src={graph}\r\n                                        rounded\r\n                                        thumbnail\r\n                                        className=\"mb-2\"\r\n                                        style={{ border: 'none' }}\r\n                                    />\r\n                                </CCol>\r\n                                <CCol className='d-flex justify-content-between align-items-center'>\r\n                                    <div>\r\n                                        <CFormLabel className='fs-2'>Back office</CFormLabel>\r\n                                        <CFormLabel className='mt-2'>Ажилтнууд мэйл хаяг болон нэвтрэх нууц үгээ ашиглан системд нэвтэрнэ</CFormLabel>\r\n                                    </div>\r\n                                    <CFormSwitch id=\"toggle2\" checked={isBackOfficeChecked} onChange={handleBackOfficeToggleChange} />\r\n                                </CCol>\r\n                            </CRow>\r\n\r\n                            {isBackOfficeChecked && (\r\n                                <div>\r\n                                    <CFormCheck id=\"flexCheckDefault14\" label=\"Борлуулалтын тайлан харах \" />\r\n                                    <CFormCheck id=\"flexCheckDefault15\" label=\"Борлуулалт хүчингүй болгох\" />\r\n                                    <CFormCheck id=\"flexCheckDefault16\" label=\"Бараа бүртгэх\" />\r\n                                    <CFormCheck id=\"flexCheckDefault17\" label=\"Ажилтан бүртгэх\" />\r\n                                    <CFormCheck id=\"flexCheckDefault18\" label=\"Харилцагч бүртгэх\" />\r\n                                    <CFormCheck id=\"flexCheckDefault19\" label=\"Тохиргоо өөрчлөх \" />\r\n                                    <CFormCheck id=\"flexCheckDefault20\" label=\"Тооцоог бүртгэх\" />\r\n                                    <CFormCheck id=\"flexCheckDefault21\" label=\"Төлбөрийн төрөл бүртгэх\" />\r\n                                    <CFormCheck id=\"flexCheckDefault22\" label=\"Хөнгөлөлт бүртгэх \" />\r\n                                    <CFormCheck id=\"flexCheckDefault23\" label=\"Татвар бүртгэх\" />\r\n                                    <CFormCheck id=\"flexCheckDefault24\" label=\"Kitchen принтер бүртгэх\" />\r\n                                    <CFormCheck id=\"flexCheckDefault25\" label=\"Хоолны сонголт бүртгэх\" />\r\n                                    <CFormCheck id=\"flexCheckDefault26\" label=\"Пос бүртгэх\" />\r\n                                </div>\r\n                            )}\r\n                        </CCol>\r\n                    </CRow>\r\n                    <div className='text-center'>\r\n                        <CButton color='primary' className='mt-3'>\r\n                            Эрхийн тохиргоо нэмэх\r\n                        </CButton>\r\n                    </div>\r\n                </CCardBody>\r\n            </CCard>\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default Addsetting;\r\n","import React, { useState } from 'react';\r\nimport { CCard, CCardHeader, CCardBody, CImage, CButton, CFormLabel } from '@coreui/react';\r\nimport settingImage from './photos/icons8-setting-96.png'; // Renamed import for clarity\r\nimport Addsetting from './Addsetting'; // Import the Addsetting component\r\n\r\nconst Settings = () => {\r\n    const [isAddSettingVisible, setIsAddSettingVisible] = useState(false);\r\n\r\n    const handleShowAddSetting = () => {\r\n        setIsAddSettingVisible(true);\r\n    };\r\n\r\n    if (isAddSettingVisible) {\r\n        return <Addsetting />;\r\n    }\r\n\r\n    return (\r\n        <main className='mx-2 mt-2'>\r\n            <CCard>\r\n                <CCardHeader>Эрхийн тохиргоо</CCardHeader>\r\n                <CCardBody className='text-center'>\r\n                    <CImage\r\n                        src={settingImage} // Updated variable name\r\n                        rounded\r\n                        thumbnail\r\n                        width={200}\r\n                        height={200}\r\n                        className=\"mb-2\"\r\n                        style={{ border: 'none' }}\r\n                    />\r\n                    <div className='d-flex flex-column align-items-center'>\r\n                        <CFormLabel className='fs-2'>Эрхийн тохиргоо</CFormLabel>\r\n                    </div>\r\n                    <div className='d-flex flex-column align-items-center'>\r\n                        <CButton color='primary' className='my-2' onClick={handleShowAddSetting}>\r\n                            Эрх нэмэх \r\n                        </CButton>\r\n                    </div>\r\n                </CCardBody>\r\n            </CCard>\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default Settings;\r\n","import React, { useState } from 'react';\r\nimport {\r\n    CCollapse,\r\n    CContainer,\r\n    CNavbar,\r\n    CNavbarNav,\r\n    CNavItem,\r\n    CNavLink,\r\n    CNavbarBrand,\r\n    CNavbarToggler,\r\n} from '@coreui/react';\r\nimport {cilUser} from '@coreui/icons';\r\nimport CIcon from '@coreui/icons-react';\r\nimport TimeList from './timeList';\r\nimport TimeSetting from './timeSettings';\r\nimport EmployeeList from './employeeList';\r\nimport Settings from './settings';\r\n\r\n\r\nconst Employee = () => {\r\n    const [showTimeList, setShowTimeList] = useState(false);\r\n    const [showTimeSetting, setShowTimeSetting] = useState(false);\r\n    const [showEmployeeList, setShowEmployeeList] = useState(false);\r\n    const [showSettings, setShowSettings] = useState(false);\r\n    const [visible, setVisible] = useState(false);\r\n\r\n    return (\r\n        <div className=\"app-container d-flex flex-column mt-2\">\r\n            <CNavbar expand=\"lg\" className=\"border rounded-3\">\r\n                <CContainer fluid>\r\n                    <CNavbarBrand>\r\n                        <h3>\r\n                            Ажилчин\r\n                        </h3>\r\n                    </CNavbarBrand>\r\n                    <CNavbarToggler\r\n                        aria-label=\"Toggle navigation\"\r\n                        aria-expanded={visible}\r\n                        onClick={() => setVisible(!visible)}\r\n                    />\r\n                    <CCollapse className=\"navbar-collapse\" visible={visible}>\r\n                        <CNavbarNav>\r\n                            <CNavItem className={`${showEmployeeList ? 'border-bottom fw-bold' : ''}`}>\r\n                                <CNavLink\r\n                                    active\r\n                                    onClick={() => {\r\n                                        setShowTimeList(false);\r\n                                        setShowTimeSetting(false);\r\n                                        setShowEmployeeList(true);\r\n                                        setShowSettings(false);\r\n                                    }}\r\n                                >\r\n                                    Ажилчны жагсаалт\r\n                                </CNavLink>\r\n                            </CNavItem>\r\n                            <CNavItem className={`${showSettings ? 'border-bottom fw-bold' : ''}`}>\r\n                                <CNavLink\r\n                                    active\r\n                                    onClick={() => {\r\n                                        setShowEmployeeList(false);\r\n                                        setShowTimeList(false);\r\n                                        setShowTimeSetting(false);\r\n                                        setShowSettings(true);\r\n                                    }}\r\n                                >\r\n                                    Эрхийн тохиргоо\r\n                                </CNavLink>\r\n                            </CNavItem>\r\n                            <CNavItem className={`${showTimeSetting ? 'border-bottom fw-bold' : ''}`}>\r\n                                <CNavLink\r\n                                    active\r\n                                    onClick={() => {\r\n                                        setShowEmployeeList(false);\r\n                                        setShowTimeList(false);\r\n                                        setShowTimeSetting(true);\r\n                                        setShowSettings(false);\r\n                                    }}\r\n                                >\r\n                                    Цагийн тохиргоо\r\n                                </CNavLink>\r\n                            </CNavItem>\r\n                            <CNavItem className={`${showTimeList ? 'border-bottom fw-bold' : ''}`}>\r\n                                <CNavLink\r\n                                    active\r\n                                    onClick={() => {\r\n                                        setShowEmployeeList(false);\r\n                                        setShowTimeList(true);\r\n                                        setShowTimeSetting(false);\r\n                                        setShowSettings(false);\r\n                                    }}\r\n                                > \r\n                                    Цагын жагсаалт\r\n                                </CNavLink>\r\n                            </CNavItem>\r\n                            \r\n                        </CNavbarNav>\r\n                    </CCollapse>\r\n                </CContainer>\r\n            </CNavbar>\r\n            {showEmployeeList && <EmployeeList />}\r\n            {showSettings && <Settings />}\r\n            {showTimeSetting&& <TimeSetting />}\r\n            {showTimeList && <TimeList />} {/* Display ExtraCharge component for Нэмэлт төлбөр */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Employee;\r\n","import React, { ElementType, forwardRef, HTMLAttributes } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { PolymorphicRefForwardingComponent } from '../../helpers'\n\nexport interface CCardTitleProps extends HTMLAttributes<HTMLHeadingElement> {\n  /**\n   * Component used for the root node. Either a string to use a HTML element or a component.\n   */\n  as?: ElementType\n  /**\n   * A string of all className you want applied to the component.\n   */\n  className?: string\n}\n\nexport const CCardTitle: PolymorphicRefForwardingComponent<'h5', CCardTitleProps> = forwardRef<\n  HTMLHeadingElement,\n  CCardTitleProps\n>(({ children, as: Component = 'h5', className, ...rest }, ref) => {\n  return (\n    <Component className={classNames('card-title', className)} {...rest} ref={ref}>\n      {children}\n    </Component>\n  )\n})\n\nCCardTitle.propTypes = {\n  as: PropTypes.elementType,\n  children: PropTypes.node,\n  className: PropTypes.string,\n}\n\nCCardTitle.displayName = 'CCardTitle'\n","import React, { forwardRef, InputHTMLAttributes, ReactNode, useEffect, useRef } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { CFormControlValidation, CFormControlValidationProps } from './CFormControlValidation'\nimport { CFormLabel } from './CFormLabel'\n\nimport { useForkedRef } from '../../hooks'\nimport type { Colors, Shapes } from '../../types'\n\nexport type ButtonObject = {\n  /**\n   * Sets the color context of the component to one of CoreUI’s themed colors.\n   *\n   * @type 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'dark' | 'light' | string\n   */\n  color?: Colors\n  /**\n   * Select the shape of the component.\n   *\n   * @type 'rounded' | 'rounded-top' | 'rounded-end' | 'rounded-bottom' | 'rounded-start' | 'rounded-circle' | 'rounded-pill' | 'rounded-0' | 'rounded-1' | 'rounded-2' | 'rounded-3' | string\n   */\n  shape?: Shapes\n  /**\n   * Size the component small or large.\n   */\n  size?: 'sm' | 'lg'\n  /**\n   * Set the button variant to an outlined button or a ghost button.\n   */\n  variant?: 'outline' | 'ghost'\n}\n\nexport interface CFormCheckProps\n  extends CFormControlValidationProps,\n    InputHTMLAttributes<HTMLInputElement> {\n  /**\n   * Create button-like checkboxes and radio buttons.\n   */\n  button?: ButtonObject\n  /**\n   * A string of all className you want applied to the component.\n   */\n  className?: string\n  /**\n   * Sets hit area to the full area of the component.\n   */\n  hitArea?: 'full'\n  /**\n   * The id global attribute defines an identifier (ID) that must be unique in the whole document.\n   */\n  id?: string\n  /**\n   * Input Checkbox indeterminate Property.\n   */\n  indeterminate?: boolean\n  /**\n   * Group checkboxes or radios on the same horizontal row.\n   */\n  inline?: boolean\n  /**\n   * Set component validation state to invalid.\n   */\n  invalid?: boolean\n  /**\n   * The element represents a caption for a component.\n   */\n  label?: string | ReactNode\n  /**\n   * Put checkboxes or radios on the opposite side.\n   *\n   * @sinve 4.7.0\n   */\n  reverse?: boolean\n  /**\n   * Specifies the type of component.\n   */\n  type?: 'checkbox' | 'radio'\n  /**\n   * Set component validation state to valid.\n   */\n  valid?: boolean\n}\n\nexport const CFormCheck = forwardRef<HTMLInputElement, CFormCheckProps>(\n  (\n    {\n      className,\n      button,\n      feedback,\n      feedbackInvalid,\n      feedbackValid,\n      floatingLabel,\n      tooltipFeedback,\n      hitArea,\n      id,\n      indeterminate,\n      inline,\n      invalid,\n      label,\n      reverse,\n      type = 'checkbox',\n      valid,\n      ...rest\n    },\n    ref,\n  ) => {\n    const inputRef = useRef<HTMLInputElement>(null)\n    const forkedRef = useForkedRef(ref, inputRef)\n\n    useEffect(() => {\n      if (inputRef.current && indeterminate) {\n        inputRef.current.indeterminate = indeterminate\n      }\n    }, [indeterminate, inputRef.current])\n\n    const FormControl = () => (\n      <input\n        type={type}\n        className={classNames(button ? 'btn-check' : 'form-check-input', {\n          'is-invalid': invalid,\n          'is-valid': valid,\n          'me-2': hitArea,\n        })}\n        id={id}\n        {...rest}\n        ref={forkedRef}\n      />\n    )\n\n    const FormValidation = () => (\n      <CFormControlValidation\n        describedby={rest['aria-describedby']}\n        feedback={feedback}\n        feedbackInvalid={feedbackInvalid}\n        feedbackValid={feedbackValid}\n        floatingLabel={floatingLabel}\n        invalid={invalid}\n        tooltipFeedback={tooltipFeedback}\n        valid={valid}\n      />\n    )\n\n    const FormLabel = () => (\n      <CFormLabel\n        customClassName={classNames(\n          button\n            ? classNames(\n                'btn',\n                button.variant ? `btn-${button.variant}-${button.color}` : `btn-${button.color}`,\n                {\n                  [`btn-${button.size}`]: button.size,\n                },\n                `${button.shape}`,\n              )\n            : 'form-check-label',\n        )}\n        {...(id && { htmlFor: id })}\n      >\n        {label}\n      </CFormLabel>\n    )\n\n    const FormCheck = () => {\n      if (button) {\n        return (\n          <>\n            <FormControl />\n            {label && <FormLabel />}\n            <FormValidation />\n          </>\n        )\n      }\n\n      if (label) {\n        return hitArea ? (\n          <>\n            <FormControl />\n            <CFormLabel\n              customClassName={classNames('form-check-label stretched-link', className)}\n              {...(id && { htmlFor: id })}\n            >\n              {label}\n            </CFormLabel>\n            <FormValidation />\n          </>\n        ) : (\n          <div\n            className={classNames(\n              'form-check',\n              {\n                'form-check-inline': inline,\n                'form-check-reverse': reverse,\n                'is-invalid': invalid,\n                'is-valid': valid,\n              },\n              className,\n            )}\n          >\n            <FormControl />\n            <FormLabel />\n            <FormValidation />\n          </div>\n        )\n      }\n\n      return <FormControl />\n    }\n\n    return <FormCheck />\n  },\n)\n\nCFormCheck.propTypes = {\n  button: PropTypes.object,\n  className: PropTypes.string,\n  hitArea: PropTypes.oneOf(['full']),\n  id: PropTypes.string,\n  indeterminate: PropTypes.bool,\n  inline: PropTypes.bool,\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  reverse: PropTypes.bool,\n  type: PropTypes.oneOf(['checkbox', 'radio']),\n  ...CFormControlValidation.propTypes,\n}\n\nCFormCheck.displayName = 'CFormCheck'\n","import React, { forwardRef, InputHTMLAttributes, ReactNode } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { CFormLabel } from './CFormLabel'\n\nexport interface CFormSwitchProps extends Omit<InputHTMLAttributes<HTMLInputElement>, 'size'> {\n  /**\n   * A string of all className you want applied to the component.\n   */\n  className?: string\n  /**\n   * The id global attribute defines an identifier (ID) that must be unique in the whole document.\n   */\n  id?: string\n  /**\n   * Set component validation state to invalid.\n   */\n  invalid?: boolean\n  /**\n   * The element represents a caption for a component.\n   */\n  label?: string | ReactNode\n  /**\n   * Put switch on the opposite side.\n   *\n   * @sinve 4.7.0\n   */\n  reverse?: boolean\n  /**\n   * Size the component large or extra large. Works only with `switch`.\n   */\n  size?: 'lg' | 'xl'\n  /**\n   * Specifies the type of component.\n   */\n  type?: 'checkbox' | 'radio'\n  /**\n   * Set component validation state to valid.\n   */\n  valid?: boolean\n}\n\nexport const CFormSwitch = forwardRef<HTMLInputElement, CFormSwitchProps>(\n  ({ className, id, invalid, label, reverse, size, type = 'checkbox', valid, ...rest }, ref) => {\n    return (\n      <div\n        className={classNames(\n          'form-check form-switch',\n          {\n            'form-check-reverse': reverse,\n            [`form-switch-${size}`]: size,\n            'is-invalid': invalid,\n            'is-valid': valid,\n          },\n          className,\n        )}\n      >\n        <input\n          type={type}\n          className={classNames('form-check-input', {\n            'is-invalid': invalid,\n            'is-valid': valid,\n          })}\n          id={id}\n          {...rest}\n          ref={ref}\n        />\n        {label && (\n          <CFormLabel customClassName=\"form-check-label\" {...(id && { htmlFor: id })}>\n            {label}\n          </CFormLabel>\n        )}\n      </div>\n    )\n  },\n)\n\nCFormSwitch.propTypes = {\n  className: PropTypes.string,\n  id: PropTypes.string,\n  invalid: PropTypes.bool,\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  reverse: PropTypes.bool,\n  size: PropTypes.oneOf(['lg', 'xl']),\n  type: PropTypes.oneOf(['checkbox', 'radio']),\n  valid: PropTypes.bool,\n}\n\nCFormSwitch.displayName = 'CFormSwitch'\n","import React, { forwardRef, ImgHTMLAttributes } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nexport interface CImageProps extends ImgHTMLAttributes<HTMLOrSVGImageElement> {\n  /**\n   * Set the horizontal aligment.\n   */\n  align?: 'start' | 'center' | 'end'\n  /**\n   * A string of all className you want applied to the component.\n   */\n  className?: string\n  /**\n   * Make image responsive.\n   */\n  fluid?: boolean\n  /**\n   * Make image rounded.\n   */\n  rounded?: boolean\n  /**\n   * Give an image a rounded 1px border appearance.\n   */\n  thumbnail?: boolean\n}\n\nexport const CImage = forwardRef<HTMLImageElement, CImageProps>(\n  ({ align, className, fluid, rounded, thumbnail, ...rest }, ref) => {\n    return (\n      <img\n        className={\n          classNames(\n            {\n              [`float-${align}`]: align && (align === 'start' || align === 'end'),\n              'd-block mx-auto': align && align === 'center',\n              'img-fluid': fluid,\n              rounded: rounded,\n              'img-thumbnail': thumbnail,\n            },\n            className,\n          ) || undefined\n        }\n        {...rest}\n        ref={ref}\n      />\n    )\n  },\n)\n\nCImage.propTypes = {\n  align: PropTypes.oneOf(['start', 'center', 'end']),\n  className: PropTypes.string,\n  fluid: PropTypes.bool,\n  rounded: PropTypes.bool,\n  thumbnail: PropTypes.bool,\n}\n\nCImage.displayName = 'CImage'\n"],"names":["EmployeeList","importVisible","setImportVisible","useState","visible","setVisible","_jsx","className","children","_jsxs","CCard","CCardHeader","CCardBody","CRow","CCol","xs","CFormLabel","htmlFor","CFormInput","type","id","name","CFormSelect","value","CImage","src","rounded","thumbnail","width","height","style","border","CButton","color","onClick","handleModal","AddTimeList","maxWidth","md","window","history","back","TimeSettings","showTimeSetting","setShowTimeSetting","CModal","onClose","size","CModalHeader","CModalTitle","CModalBody","AddEmployeeList","CCardTitle","borderRadius","display","alignItems","justifyContent","cursor","showAddEmployee","setShowAddEmployee","employee","handleAddEmployeeClick","Addsetting","isPostChecked","setIsPostChecked","isBackOfficeChecked","setIsBackOfficeChecked","CFormSwitch","checked","onChange","e","target","CFormCheck","label","Settings","isAddSettingVisible","setIsAddSettingVisible","handleShowAddSetting","Employee","showTimeList","setShowTimeList","showEmployeeList","setShowEmployeeList","showSettings","setShowSettings","CNavbar","expand","CContainer","fluid","CNavbarBrand","CNavbarToggler","CCollapse","CNavbarNav","CNavItem","concat","CNavLink","active","TimeSetting","TimeList","forwardRef","_a","ref","_b","as","Component","rest","__rest","React","__assign","classNames","propTypes","PropTypes","displayName","button","feedback","feedbackInvalid","feedbackValid","floatingLabel","tooltipFeedback","hitArea","indeterminate","inline","invalid","reverse","valid","inputRef","useRef","forkedRef","useForkedRef","useEffect","current","FormControl","FormValidation","CFormControlValidation","describedby","FormLabel","customClassName","variant","shape","_c","align","undefined"],"sourceRoot":""}