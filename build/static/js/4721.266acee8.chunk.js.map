{"version":3,"file":"static/js/4721.266acee8.chunk.js","mappings":"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","sources":["views/pages/login/Login.js","../node_modules/@coreui/react/src/components/card/CCardGroup.tsx"],"sourcesContent":["import { cilLockLocked, cilUser } from '@coreui/icons';\r\nimport CIcon from '@coreui/icons-react';\r\nimport {\r\n  CAlert,\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardGroup,\r\n  CCol,\r\n  CContainer,\r\n  CForm,\r\n  CFormInput,\r\n  CInputGroup,\r\n  CInputGroupText,\r\n  CRow\r\n} from '@coreui/react';\r\nimport { faEye, faEyeSlash } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n//import axios from 'axios';\r\n// import { useAuth } from 'src/AuthContext';\r\n//import { useHistory } from 'react-router-dom';\r\n\r\nconst Login = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [alertMessage, setAlertMessage] = useState('');\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  //const history = useHistory();\r\n  const navigate = useNavigate();\r\n  const HandleLogin = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      setLoading(true);\r\n      if (!username || !password) {\r\n        setAlertMessage('Хэрэглэгчийн нэр болон нууц үгээ оруулна уу');\r\n        return;\r\n      }\r\n      await new Promise(resolve => setTimeout(resolve, 2000));\r\n      const myHeaders = new Headers();\r\n      myHeaders.append(\"Content-Type\", \"application/json\");\r\n    \r\n      const raw = JSON.stringify({\r\n        \"username\": username,\r\n        \"password\": password\r\n      });\r\n  \r\n      const requestOptions = {\r\n        method: \"POST\",\r\n        headers: myHeaders,\r\n        body: raw\r\n      };\r\n      const response = await fetch(\"https://api.majorsoft.mn/api/login\", requestOptions);\r\n      const result = await response.json();\r\n      //history.push('/');\r\n      if (response.ok) {\r\n        if (result.isOK) {\r\n          //setAuthenticated(true);\r\n          const data = JSON.parse(result.json)\r\n          const currentTime = new Date().getTime();\r\n          const expiryDate = currentTime + data.expiresIn * 1000;\r\n          localStorage.setItem(\"token\", data.accessToken);\r\n          localStorage.setItem(\"user-info\", data.userId);\r\n          localStorage.setItem(\"expiryDate\", expiryDate);\r\n          localStorage.setItem(\"isAuthenticated\", true);\r\n          //setAlertMessage(result.message);\r\n          navigate('/dashboard');\r\n        } else {\r\n          setAlertMessage(result.message);\r\n        }\r\n      } else {\r\n        setAlertMessage(result.message);\r\n      }\r\n    } catch (error) {\r\n      setAlertMessage(error.message);\r\n    }\r\n    finally{setLoading(false);}\r\n  };\r\n\r\n  const togglePasswordVisibility = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-body-tertiary min-vh-100 d-flex flex-row align-items-center\">\r\n      <CContainer>\r\n        <CRow className=\"justify-content-center\">\r\n          <CCol md={8}>\r\n            <CCardGroup>\r\n              <CCard className=\"p-4\">\r\n                <CCardBody>\r\n                  <CForm onSubmit={HandleLogin}>\r\n                    <h1>Нэвтрэх</h1>\r\n                    <p className=\"text-body-secondary\">Та өөрийн бүртгэлтэй хаягаар нэвтрэнэ үү</p>\r\n                    <CInputGroup className=\"mb-3\">\r\n                      <CInputGroupText>\r\n                        <CIcon icon={cilUser} />\r\n                      </CInputGroupText>\r\n                      <CFormInput\r\n                        placeholder=\"Хэрэглэгчийн нэр\"\r\n                        autoComplete=\"username\"\r\n                        value={username}\r\n                        onChange={(e) => setUsername(e.target.value)}\r\n                      />\r\n                    </CInputGroup>\r\n                    <CInputGroup className=\"mb-4\">\r\n                      <CInputGroupText>\r\n                        <CIcon icon={cilLockLocked} />\r\n                      </CInputGroupText>\r\n                      <CFormInput\r\n                        type={showPassword ? \"text\" : \"password\"}\r\n                        placeholder=\"Нууц үг\"\r\n                        autoComplete=\"current-password\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                      />\r\n                      <CInputGroupText type=\"button\" onClick={togglePasswordVisibility}>\r\n                        <FontAwesomeIcon icon={showPassword ? faEyeSlash : faEye} />\r\n                      </CInputGroupText>\r\n                    </CInputGroup>\r\n                    {alertMessage && <CAlert color='danger' dismissible onClose={() => setAlertMessage('')}>{alertMessage}</CAlert>}\r\n                    <CRow>\r\n                      <CCol xs={6}>\r\n                        <CButton type=\"submit\" color=\"primary\" className=\"px-4\">\r\n                          Нэвтрэх\r\n                        </CButton>\r\n                      </CCol>\r\n                      <CCol xs={6} className=\"text-right\">\r\n                        <Link to=\"/reset-password\">\r\n                          <CButton color=\"link\" className=\"px-0\">\r\n                            Нууц үг мартсан\r\n                          </CButton>\r\n                        </Link>\r\n                      </CCol>\r\n                    </CRow>\r\n                  </CForm>\r\n                </CCardBody>\r\n              </CCard>\r\n              <CCard className=\"text-white bg-primary py-5\">\r\n                <CCardBody className=\"text-center\">\r\n                  <div>\r\n                    <h2>Бүртгүүлэх</h2>\r\n                    <p>Бизнесээ ухаалгаар хяна</p>\r\n                    <Link to=\"/register\">\r\n                      <CButton color=\"primary\" className=\"mt-3\">\r\n                        Одоо бүртгүүлэх\r\n                      </CButton>\r\n                    </Link>\r\n                  </div>\r\n                </CCardBody>\r\n              </CCard>\r\n            </CCardGroup>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </div>\r\n  );\r\n};\r\nLogin.propTypes = { setAuthenticated: PropTypes.bool.isRequired };\r\n\r\nexport default Login;","import React, { forwardRef, HTMLAttributes } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nexport interface CCardGroupProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n}\n\nexport const CCardGroup = forwardRef<HTMLDivElement, CCardGroupProps>(\n  ({ children, className, ...rest }, ref) => {\n    return (\n      <div className={classNames('card-group', className)} {...rest} ref={ref}>\n        {children}\n      </div>\n    )\n  },\n)\n\nCCardGroup.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n}\n\nCCardGroup.displayName = 'CCardGroup'\n"],"names":["Login","username","setUsername","useState","password","setPassword","alertMessage","setAlertMessage","showPassword","setShowPassword","loading","setLoading","navigate","useNavigate","_jsx","className","children","CContainer","CRow","CCol","md","_jsxs","CCardGroup","CCard","CCardBody","CForm","onSubmit","async","e","preventDefault","Promise","resolve","setTimeout","myHeaders","Headers","append","requestOptions","method","headers","body","JSON","stringify","response","fetch","result","json","ok","isOK","data","parse","expiryDate","Date","getTime","expiresIn","localStorage","setItem","accessToken","userId","message","error","CInputGroup","CInputGroupText","CIcon","icon","cilUser","CFormInput","placeholder","autoComplete","value","onChange","target","cilLockLocked","type","onClick","togglePasswordVisibility","FontAwesomeIcon","faEyeSlash","faEye","CAlert","color","dismissible","onClose","xs","CButton","Link","to","forwardRef","_a","ref","rest","__rest","React","__assign","classNames","propTypes","PropTypes","displayName"],"sourceRoot":""}