{"version":3,"file":"static/js/9772.e3ea6910.chunk.js","mappings":"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","sources":["views/dashboard/MainChart.js","views/dashboard/Dashboard.js","views/widgets/WidgetsBrand.js","views/widgets/WidgetsDropdown.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react'\r\n\r\nimport { CChartLine } from '@coreui/react-chartjs'\r\nimport { getStyle } from '@coreui/utils'\r\n\r\nconst MainChart = () => {\r\n  const chartRef = useRef(null)\r\n\r\n  useEffect(() => {\r\n    document.documentElement.addEventListener('ColorSchemeChange', () => {\r\n      if (chartRef.current) {\r\n        setTimeout(() => {\r\n          chartRef.current.options.scales.x.grid.borderColor = getStyle(\r\n            '--cui-border-color-translucent',\r\n          )\r\n          chartRef.current.options.scales.x.grid.color = getStyle('--cui-border-color-translucent')\r\n          chartRef.current.options.scales.x.ticks.color = getStyle('--cui-body-color')\r\n          chartRef.current.options.scales.y.grid.borderColor = getStyle(\r\n            '--cui-border-color-translucent',\r\n          )\r\n          chartRef.current.options.scales.y.grid.color = getStyle('--cui-border-color-translucent')\r\n          chartRef.current.options.scales.y.ticks.color = getStyle('--cui-body-color')\r\n          chartRef.current.update()\r\n        })\r\n      }\r\n    })\r\n  }, [chartRef])\r\n\r\n  const random = () => Math.round(Math.random() * 100)\r\n\r\n  return (\r\n    <>\r\n      <CChartLine\r\n        ref={chartRef}\r\n        style={{ height: '300px', marginTop: '40px' }}\r\n        data={{\r\n          labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n          datasets: [\r\n            {\r\n              label: 'My First dataset',\r\n              backgroundColor: `rgba(${getStyle('--cui-info-rgb')}, .1)`,\r\n              borderColor: getStyle('--cui-info'),\r\n              pointHoverBackgroundColor: getStyle('--cui-info'),\r\n              borderWidth: 2,\r\n              data: [\r\n                random(50, 200),\r\n                random(50, 200),\r\n                random(50, 200),\r\n                random(50, 200),\r\n                random(50, 200),\r\n                random(50, 200),\r\n                random(50, 200),\r\n              ],\r\n              fill: true,\r\n            },\r\n            {\r\n              label: 'My Second dataset',\r\n              backgroundColor: 'transparent',\r\n              borderColor: getStyle('--cui-success'),\r\n              pointHoverBackgroundColor: getStyle('--cui-success'),\r\n              borderWidth: 2,\r\n              data: [\r\n                random(50, 200),\r\n                random(50, 200),\r\n                random(50, 200),\r\n                random(50, 200),\r\n                random(50, 200),\r\n                random(50, 200),\r\n                random(50, 200),\r\n              ],\r\n            },\r\n            {\r\n              label: 'My Third dataset',\r\n              backgroundColor: 'transparent',\r\n              borderColor: getStyle('--cui-danger'),\r\n              pointHoverBackgroundColor: getStyle('--cui-danger'),\r\n              borderWidth: 1,\r\n              borderDash: [8, 5],\r\n              data: [65, 65, 65, 65, 65, 65, 65],\r\n            },\r\n          ],\r\n        }}\r\n        options={{\r\n          maintainAspectRatio: false,\r\n          plugins: {\r\n            legend: {\r\n              display: false,\r\n            },\r\n          },\r\n          scales: {\r\n            x: {\r\n              grid: {\r\n                color: getStyle('--cui-border-color-translucent'),\r\n                drawOnChartArea: false,\r\n              },\r\n              ticks: {\r\n                color: getStyle('--cui-body-color'),\r\n              },\r\n            },\r\n            y: {\r\n              beginAtZero: true,\r\n              border: {\r\n                color: getStyle('--cui-border-color-translucent'),\r\n              },\r\n              grid: {\r\n                color: getStyle('--cui-border-color-translucent'),\r\n              },\r\n              max: 250,\r\n              ticks: {\r\n                color: getStyle('--cui-body-color'),\r\n                maxTicksLimit: 5,\r\n                stepSize: Math.ceil(250 / 5),\r\n              },\r\n            },\r\n          },\r\n          elements: {\r\n            line: {\r\n              tension: 0.4,\r\n            },\r\n            point: {\r\n              radius: 0,\r\n              hitRadius: 10,\r\n              hoverRadius: 4,\r\n              hoverBorderWidth: 3,\r\n            },\r\n          },\r\n        }}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MainChart\r\n","import classNames from 'classnames'\r\n\r\nimport {\r\n  cibCcAmex,\r\n  cibCcApplePay,\r\n  cibCcMastercard,\r\n  cibCcPaypal,\r\n  cibCcStripe,\r\n  cibCcVisa,\r\n  cibFacebook,\r\n  cibGoogle,\r\n  cibLinkedin,\r\n  cibTwitter,\r\n  cifBr,\r\n  cifEs,\r\n  cifFr,\r\n  cifIn,\r\n  cifPl,\r\n  cifUs,\r\n  cilCloudDownload,\r\n  cilPeople,\r\n  cilUser,\r\n  cilUserFemale,\r\n} from '@coreui/icons'\r\nimport CIcon from '@coreui/icons-react'\r\nimport {\r\n  CAvatar,\r\n  CButton,\r\n  CButtonGroup,\r\n  CCard,\r\n  CCardBody,\r\n  CCardFooter,\r\n  CCardHeader,\r\n  CCol,\r\n  CProgress,\r\n  CRow,\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from '@coreui/react'\r\n\r\nimport avatar1 from 'src/assets/images/avatars/1.jpg'\r\nimport avatar2 from 'src/assets/images/avatars/2.jpg'\r\nimport avatar3 from 'src/assets/images/avatars/3.jpg'\r\nimport avatar4 from 'src/assets/images/avatars/4.jpg'\r\nimport avatar5 from 'src/assets/images/avatars/5.jpg'\r\nimport avatar6 from 'src/assets/images/avatars/6.jpg'\r\n\r\nimport WidgetsBrand from '../widgets/WidgetsBrand'\r\nimport WidgetsDropdown from '../widgets/WidgetsDropdown'\r\nimport MainChart from './MainChart'\r\n\r\nconst Dashboard = () => {\r\n  const progressExample = [\r\n    { title: 'Visits', value: '29.703 Users', percent: 40, color: 'success' },\r\n    { title: 'Unique', value: '24.093 Users', percent: 20, color: 'info' },\r\n    { title: 'Pageviews', value: '78.706 Views', percent: 60, color: 'warning' },\r\n    { title: 'New Users', value: '22.123 Users', percent: 80, color: 'danger' },\r\n    { title: 'Bounce Rate', value: 'Average Rate', percent: 40.15, color: 'primary' },\r\n  ]\r\n\r\n  const progressGroupExample1 = [\r\n    { title: 'Monday', value1: 34, value2: 78 },\r\n    { title: 'Tuesday', value1: 56, value2: 94 },\r\n    { title: 'Wednesday', value1: 12, value2: 67 },\r\n    { title: 'Thursday', value1: 43, value2: 91 },\r\n    { title: 'Friday', value1: 22, value2: 73 },\r\n    { title: 'Saturday', value1: 53, value2: 82 },\r\n    { title: 'Sunday', value1: 9, value2: 69 },\r\n  ]\r\n\r\n  const progressGroupExample2 = [\r\n    { title: 'Male', icon: cilUser, value: 53 },\r\n    { title: 'Female', icon: cilUserFemale, value: 43 },\r\n  ]\r\n\r\n  const progressGroupExample3 = [\r\n    { title: 'Organic Search', icon: cibGoogle, percent: 56, value: '191,235' },\r\n    { title: 'Facebook', icon: cibFacebook, percent: 15, value: '51,223' },\r\n    { title: 'Twitter', icon: cibTwitter, percent: 11, value: '37,564' },\r\n    { title: 'LinkedIn', icon: cibLinkedin, percent: 8, value: '27,319' },\r\n  ]\r\n\r\n  const tableExample = [\r\n    {\r\n      avatar: { src: avatar1, status: 'success' },\r\n      user: {\r\n        name: 'Yiorgos Avraamu',\r\n        new: true,\r\n        registered: 'Jan 1, 2023',\r\n      },\r\n      country: { name: 'USA', flag: cifUs },\r\n      usage: {\r\n        value: 50,\r\n        period: 'Jun 11, 2023 - Jul 10, 2023',\r\n        color: 'success',\r\n      },\r\n      payment: { name: 'Mastercard', icon: cibCcMastercard },\r\n      activity: '10 sec ago',\r\n    },\r\n    {\r\n      avatar: { src: avatar2, status: 'danger' },\r\n      user: {\r\n        name: 'Avram Tarasios',\r\n        new: false,\r\n        registered: 'Jan 1, 2023',\r\n      },\r\n      country: { name: 'Brazil', flag: cifBr },\r\n      usage: {\r\n        value: 22,\r\n        period: 'Jun 11, 2023 - Jul 10, 2023',\r\n        color: 'info',\r\n      },\r\n      payment: { name: 'Visa', icon: cibCcVisa },\r\n      activity: '5 minutes ago',\r\n    },\r\n    {\r\n      avatar: { src: avatar3, status: 'warning' },\r\n      user: { name: 'Quintin Ed', new: true, registered: 'Jan 1, 2023' },\r\n      country: { name: 'India', flag: cifIn },\r\n      usage: {\r\n        value: 74,\r\n        period: 'Jun 11, 2023 - Jul 10, 2023',\r\n        color: 'warning',\r\n      },\r\n      payment: { name: 'Stripe', icon: cibCcStripe },\r\n      activity: '1 hour ago',\r\n    },\r\n    {\r\n      avatar: { src: avatar4, status: 'secondary' },\r\n      user: { name: 'Enéas Kwadwo', new: true, registered: 'Jan 1, 2023' },\r\n      country: { name: 'France', flag: cifFr },\r\n      usage: {\r\n        value: 98,\r\n        period: 'Jun 11, 2023 - Jul 10, 2023',\r\n        color: 'danger',\r\n      },\r\n      payment: { name: 'PayPal', icon: cibCcPaypal },\r\n      activity: 'Last month',\r\n    },\r\n    {\r\n      avatar: { src: avatar5, status: 'success' },\r\n      user: {\r\n        name: 'Agapetus Tadeáš',\r\n        new: true,\r\n        registered: 'Jan 1, 2023',\r\n      },\r\n      country: { name: 'Spain', flag: cifEs },\r\n      usage: {\r\n        value: 22,\r\n        period: 'Jun 11, 2023 - Jul 10, 2023',\r\n        color: 'primary',\r\n      },\r\n      payment: { name: 'Google Wallet', icon: cibCcApplePay },\r\n      activity: 'Last week',\r\n    },\r\n    {\r\n      avatar: { src: avatar6, status: 'danger' },\r\n      user: {\r\n        name: 'Friderik Dávid',\r\n        new: true,\r\n        registered: 'Jan 1, 2023',\r\n      },\r\n      country: { name: 'Poland', flag: cifPl },\r\n      usage: {\r\n        value: 43,\r\n        period: 'Jun 11, 2023 - Jul 10, 2023',\r\n        color: 'success',\r\n      },\r\n      payment: { name: 'Amex', icon: cibCcAmex },\r\n      activity: 'Last week',\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <>\r\n      <WidgetsDropdown className=\"mb-4\" />\r\n      <CCard className=\"mb-4\">\r\n        <CCardBody>\r\n          <CRow>\r\n            <CCol sm={5}>\r\n              <h4 id=\"traffic\" className=\"card-title mb-0\">\r\n                Traffic\r\n              </h4>\r\n              <div className=\"small text-body-secondary\">January - July 2023</div>\r\n            </CCol>\r\n            <CCol sm={7} className=\"d-none d-md-block\">\r\n              <CButton color=\"primary\" className=\"float-end\">\r\n                <CIcon icon={cilCloudDownload} />\r\n              </CButton>\r\n              <CButtonGroup className=\"float-end me-3\">\r\n                {['Day', 'Month', 'Year'].map((value) => (\r\n                  <CButton\r\n                    color=\"outline-secondary\"\r\n                    key={value}\r\n                    className=\"mx-0\"\r\n                    active={value === 'Month'}\r\n                  >\r\n                    {value}\r\n                  </CButton>\r\n                ))}\r\n              </CButtonGroup>\r\n            </CCol>\r\n          </CRow>\r\n          <MainChart />\r\n        </CCardBody>\r\n        <CCardFooter>\r\n          <CRow\r\n            xs={{ cols: 1, gutter: 4 }}\r\n            sm={{ cols: 2 }}\r\n            lg={{ cols: 4 }}\r\n            xl={{ cols: 5 }}\r\n            className=\"mb-2 text-center\"\r\n          >\r\n            {progressExample.map((item, index, items) => (\r\n              <CCol\r\n                className={classNames({\r\n                  'd-none d-xl-block': index + 1 === items.length,\r\n                })}\r\n                key={index}\r\n              >\r\n                <div className=\"text-body-secondary\">{item.title}</div>\r\n                <div className=\"fw-semibold text-truncate\">\r\n                  {item.value} ({item.percent}%)\r\n                </div>\r\n                <CProgress thin className=\"mt-2\" color={item.color} value={item.percent} />\r\n              </CCol>\r\n            ))}\r\n          </CRow>\r\n        </CCardFooter>\r\n      </CCard>\r\n      <WidgetsBrand className=\"mb-4\" withCharts />\r\n      <CRow>\r\n        <CCol xs>\r\n          <CCard className=\"mb-4\">\r\n            <CCardHeader>Traffic {' & '} Sales</CCardHeader>\r\n            <CCardBody>\r\n              <CRow>\r\n                <CCol xs={12} md={6} xl={6}>\r\n                  <CRow>\r\n                    <CCol xs={6}>\r\n                      <div className=\"border-start border-start-4 border-start-info py-1 px-3\">\r\n                        <div className=\"text-body-secondary text-truncate small\">New Clients</div>\r\n                        <div className=\"fs-5 fw-semibold\">9,123</div>\r\n                      </div>\r\n                    </CCol>\r\n                    <CCol xs={6}>\r\n                      <div className=\"border-start border-start-4 border-start-danger py-1 px-3 mb-3\">\r\n                        <div className=\"text-body-secondary text-truncate small\">\r\n                          Recurring Clients\r\n                        </div>\r\n                        <div className=\"fs-5 fw-semibold\">22,643</div>\r\n                      </div>\r\n                    </CCol>\r\n                  </CRow>\r\n                  <hr className=\"mt-0\" />\r\n                  {progressGroupExample1.map((item, index) => (\r\n                    <div className=\"progress-group mb-4\" key={index}>\r\n                      <div className=\"progress-group-prepend\">\r\n                        <span className=\"text-body-secondary small\">{item.title}</span>\r\n                      </div>\r\n                      <div className=\"progress-group-bars\">\r\n                        <CProgress thin color=\"info\" value={item.value1} />\r\n                        <CProgress thin color=\"danger\" value={item.value2} />\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </CCol>\r\n                <CCol xs={12} md={6} xl={6}>\r\n                  <CRow>\r\n                    <CCol xs={6}>\r\n                      <div className=\"border-start border-start-4 border-start-warning py-1 px-3 mb-3\">\r\n                        <div className=\"text-body-secondary text-truncate small\">Pageviews</div>\r\n                        <div className=\"fs-5 fw-semibold\">78,623</div>\r\n                      </div>\r\n                    </CCol>\r\n                    <CCol xs={6}>\r\n                      <div className=\"border-start border-start-4 border-start-success py-1 px-3 mb-3\">\r\n                        <div className=\"text-body-secondary text-truncate small\">Organic</div>\r\n                        <div className=\"fs-5 fw-semibold\">49,123</div>\r\n                      </div>\r\n                    </CCol>\r\n                  </CRow>\r\n\r\n                  <hr className=\"mt-0\" />\r\n\r\n                  {progressGroupExample2.map((item, index) => (\r\n                    <div className=\"progress-group mb-4\" key={index}>\r\n                      <div className=\"progress-group-header\">\r\n                        <CIcon className=\"me-2\" icon={item.icon} size=\"lg\" />\r\n                        <span>{item.title}</span>\r\n                        <span className=\"ms-auto fw-semibold\">{item.value}%</span>\r\n                      </div>\r\n                      <div className=\"progress-group-bars\">\r\n                        <CProgress thin color=\"warning\" value={item.value} />\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n\r\n                  <div className=\"mb-5\"></div>\r\n\r\n                  {progressGroupExample3.map((item, index) => (\r\n                    <div className=\"progress-group\" key={index}>\r\n                      <div className=\"progress-group-header\">\r\n                        <CIcon className=\"me-2\" icon={item.icon} size=\"lg\" />\r\n                        <span>{item.title}</span>\r\n                        <span className=\"ms-auto fw-semibold\">\r\n                          {item.value}{' '}\r\n                          <span className=\"text-body-secondary small\">({item.percent}%)</span>\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"progress-group-bars\">\r\n                        <CProgress thin color=\"success\" value={item.percent} />\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </CCol>\r\n              </CRow>\r\n\r\n              <br />\r\n\r\n              <CTable align=\"middle\" className=\"mb-0 border\" hover responsive>\r\n                <CTableHead className=\"text-nowrap\">\r\n                  <CTableRow>\r\n                    <CTableHeaderCell className=\"bg-body-tertiary text-center\">\r\n                      <CIcon icon={cilPeople} />\r\n                    </CTableHeaderCell>\r\n                    <CTableHeaderCell className=\"bg-body-tertiary\">User</CTableHeaderCell>\r\n                    <CTableHeaderCell className=\"bg-body-tertiary text-center\">\r\n                      Country\r\n                    </CTableHeaderCell>\r\n                    <CTableHeaderCell className=\"bg-body-tertiary\">Usage</CTableHeaderCell>\r\n                    <CTableHeaderCell className=\"bg-body-tertiary text-center\">\r\n                      Payment Method\r\n                    </CTableHeaderCell>\r\n                    <CTableHeaderCell className=\"bg-body-tertiary\">Activity</CTableHeaderCell>\r\n                  </CTableRow>\r\n                </CTableHead>\r\n                <CTableBody>\r\n                  {tableExample.map((item, index) => (\r\n                    <CTableRow v-for=\"item in tableItems\" key={index}>\r\n                      <CTableDataCell className=\"text-center\">\r\n                        <CAvatar size=\"md\" src={item.avatar.src} status={item.avatar.status} />\r\n                      </CTableDataCell>\r\n                      <CTableDataCell>\r\n                        <div>{item.user.name}</div>\r\n                        <div className=\"small text-body-secondary text-nowrap\">\r\n                          <span>{item.user.new ? 'New' : 'Recurring'}</span> | Registered:{' '}\r\n                          {item.user.registered}\r\n                        </div>\r\n                      </CTableDataCell>\r\n                      <CTableDataCell className=\"text-center\">\r\n                        <CIcon size=\"xl\" icon={item.country.flag} title={item.country.name} />\r\n                      </CTableDataCell>\r\n                      <CTableDataCell>\r\n                        <div className=\"d-flex justify-content-between text-nowrap\">\r\n                          <div className=\"fw-semibold\">{item.usage.value}%</div>\r\n                          <div className=\"ms-3\">\r\n                            <small className=\"text-body-secondary\">{item.usage.period}</small>\r\n                          </div>\r\n                        </div>\r\n                        <CProgress thin color={item.usage.color} value={item.usage.value} />\r\n                      </CTableDataCell>\r\n                      <CTableDataCell className=\"text-center\">\r\n                        <CIcon size=\"xl\" icon={item.payment.icon} />\r\n                      </CTableDataCell>\r\n                      <CTableDataCell>\r\n                        <div className=\"small text-body-secondary text-nowrap\">Last login</div>\r\n                        <div className=\"fw-semibold text-nowrap\">{item.activity}</div>\r\n                      </CTableDataCell>\r\n                    </CTableRow>\r\n                  ))}\r\n                </CTableBody>\r\n              </CTable>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Dashboard\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { CWidgetStatsD, CRow, CCol } from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\nimport { cibFacebook, cibLinkedin, cibTwitter, cilCalendar } from '@coreui/icons'\r\nimport { CChart } from '@coreui/react-chartjs'\r\n\r\nconst WidgetsBrand = (props) => {\r\n  const chartOptions = {\r\n    elements: {\r\n      line: {\r\n        tension: 0.4,\r\n      },\r\n      point: {\r\n        radius: 0,\r\n        hitRadius: 10,\r\n        hoverRadius: 4,\r\n        hoverBorderWidth: 3,\r\n      },\r\n    },\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n      legend: {\r\n        display: false,\r\n      },\r\n    },\r\n    scales: {\r\n      x: {\r\n        display: false,\r\n      },\r\n      y: {\r\n        display: false,\r\n      },\r\n    },\r\n  }\r\n\r\n  return (\r\n    <CRow className={props.className} xs={{ gutter: 4 }}>\r\n      <CCol sm={6} xl={4} xxl={3}>\r\n        <CWidgetStatsD\r\n          {...(props.withCharts && {\r\n            chart: (\r\n              <CChart\r\n                className=\"position-absolute w-100 h-100\"\r\n                type=\"line\"\r\n                data={{\r\n                  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n                  datasets: [\r\n                    {\r\n                      backgroundColor: 'rgba(255,255,255,.1)',\r\n                      borderColor: 'rgba(255,255,255,.55)',\r\n                      pointHoverBackgroundColor: '#fff',\r\n                      borderWidth: 2,\r\n                      data: [65, 59, 84, 84, 51, 55, 40],\r\n                      fill: true,\r\n                    },\r\n                  ],\r\n                }}\r\n                options={chartOptions}\r\n              />\r\n            ),\r\n          })}\r\n          icon={<CIcon icon={cibFacebook} height={52} className=\"my-4 text-white\" />}\r\n          values={[\r\n            { title: 'friends', value: '89K' },\r\n            { title: 'feeds', value: '459' },\r\n          ]}\r\n          style={{\r\n            '--cui-card-cap-bg': '#3b5998',\r\n          }}\r\n        />\r\n      </CCol>\r\n      <CCol sm={6} xl={4} xxl={3}>\r\n        <CWidgetStatsD\r\n          {...(props.withCharts && {\r\n            chart: (\r\n              <CChart\r\n                className=\"position-absolute w-100 h-100\"\r\n                type=\"line\"\r\n                data={{\r\n                  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n                  datasets: [\r\n                    {\r\n                      backgroundColor: 'rgba(255,255,255,.1)',\r\n                      borderColor: 'rgba(255,255,255,.55)',\r\n                      pointHoverBackgroundColor: '#fff',\r\n                      borderWidth: 2,\r\n                      data: [1, 13, 9, 17, 34, 41, 38],\r\n                      fill: true,\r\n                    },\r\n                  ],\r\n                }}\r\n                options={chartOptions}\r\n              />\r\n            ),\r\n          })}\r\n          icon={<CIcon icon={cibTwitter} height={52} className=\"my-4 text-white\" />}\r\n          values={[\r\n            { title: 'followers', value: '973k' },\r\n            { title: 'tweets', value: '1.792' },\r\n          ]}\r\n          style={{\r\n            '--cui-card-cap-bg': '#00aced',\r\n          }}\r\n        />\r\n      </CCol>\r\n      <CCol sm={6} xl={4} xxl={3}>\r\n        <CWidgetStatsD\r\n          {...(props.withCharts && {\r\n            chart: (\r\n              <CChart\r\n                className=\"position-absolute w-100 h-100\"\r\n                type=\"line\"\r\n                data={{\r\n                  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n                  datasets: [\r\n                    {\r\n                      backgroundColor: 'rgba(255,255,255,.1)',\r\n                      borderColor: 'rgba(255,255,255,.55)',\r\n                      pointHoverBackgroundColor: '#fff',\r\n                      borderWidth: 2,\r\n                      data: [78, 81, 80, 45, 34, 12, 40],\r\n                      fill: true,\r\n                    },\r\n                  ],\r\n                }}\r\n                options={chartOptions}\r\n              />\r\n            ),\r\n          })}\r\n          icon={<CIcon icon={cibLinkedin} height={52} className=\"my-4 text-white\" />}\r\n          values={[\r\n            { title: 'contacts', value: '500' },\r\n            { title: 'feeds', value: '1.292' },\r\n          ]}\r\n          style={{\r\n            '--cui-card-cap-bg': '#4875b4',\r\n          }}\r\n        />\r\n      </CCol>\r\n      <CCol sm={6} xl={4} xxl={3}>\r\n        <CWidgetStatsD\r\n          color=\"warning\"\r\n          {...(props.withCharts && {\r\n            chart: (\r\n              <CChart\r\n                className=\"position-absolute w-100 h-100\"\r\n                type=\"line\"\r\n                data={{\r\n                  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n                  datasets: [\r\n                    {\r\n                      backgroundColor: 'rgba(255,255,255,.1)',\r\n                      borderColor: 'rgba(255,255,255,.55)',\r\n                      pointHoverBackgroundColor: '#fff',\r\n                      borderWidth: 2,\r\n                      data: [35, 23, 56, 22, 97, 23, 64],\r\n                      fill: true,\r\n                    },\r\n                  ],\r\n                }}\r\n                options={chartOptions}\r\n              />\r\n            ),\r\n          })}\r\n          icon={<CIcon icon={cilCalendar} height={52} className=\"my-4 text-white\" />}\r\n          values={[\r\n            { title: 'events', value: '12+' },\r\n            { title: 'meetings', value: '4' },\r\n          ]}\r\n        />\r\n      </CCol>\r\n    </CRow>\r\n  )\r\n}\r\n\r\nWidgetsBrand.propTypes = {\r\n  className: PropTypes.string,\r\n  withCharts: PropTypes.bool,\r\n}\r\n\r\nexport default WidgetsBrand\r\n","import React, { useEffect, useRef } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {\r\n  CRow,\r\n  CCol,\r\n  CDropdown,\r\n  CDropdownMenu,\r\n  CDropdownItem,\r\n  CDropdownToggle,\r\n  CWidgetStatsA,\r\n} from '@coreui/react'\r\nimport { getStyle } from '@coreui/utils'\r\nimport { CChartBar, CChartLine } from '@coreui/react-chartjs'\r\nimport CIcon from '@coreui/icons-react'\r\nimport { cilArrowBottom, cilArrowTop, cilOptions } from '@coreui/icons'\r\n\r\nconst WidgetsDropdown = (props) => {\r\n  const widgetChartRef1 = useRef(null)\r\n  const widgetChartRef2 = useRef(null)\r\n\r\n  useEffect(() => {\r\n    document.documentElement.addEventListener('ColorSchemeChange', () => {\r\n      if (widgetChartRef1.current) {\r\n        setTimeout(() => {\r\n          widgetChartRef1.current.data.datasets[0].pointBackgroundColor = getStyle('--cui-primary')\r\n          widgetChartRef1.current.update()\r\n        })\r\n      }\r\n\r\n      if (widgetChartRef2.current) {\r\n        setTimeout(() => {\r\n          widgetChartRef2.current.data.datasets[0].pointBackgroundColor = getStyle('--cui-info')\r\n          widgetChartRef2.current.update()\r\n        })\r\n      }\r\n    })\r\n  }, [widgetChartRef1, widgetChartRef2])\r\n\r\n  return (\r\n    <CRow className={props.className} xs={{ gutter: 4 }}>\r\n      <CCol sm={6} xl={4} xxl={3}>\r\n        <CWidgetStatsA\r\n          color=\"primary\"\r\n          value={\r\n            <>\r\n              26K{' '}\r\n              <span className=\"fs-6 fw-normal\">\r\n                (-12.4% <CIcon icon={cilArrowBottom} />)\r\n              </span>\r\n            </>\r\n          }\r\n          title=\"Users\"\r\n          action={\r\n            <CDropdown alignment=\"end\">\r\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"text-white p-0\">\r\n                <CIcon icon={cilOptions} />\r\n              </CDropdownToggle>\r\n              <CDropdownMenu>\r\n                <CDropdownItem>Action</CDropdownItem>\r\n                <CDropdownItem>Another action</CDropdownItem>\r\n                <CDropdownItem>Something else here...</CDropdownItem>\r\n                <CDropdownItem disabled>Disabled action</CDropdownItem>\r\n              </CDropdownMenu>\r\n            </CDropdown>\r\n          }\r\n          chart={\r\n            <CChartLine\r\n              ref={widgetChartRef1}\r\n              className=\"mt-3 mx-3\"\r\n              style={{ height: '70px' }}\r\n              data={{\r\n                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n                datasets: [\r\n                  {\r\n                    label: 'My First dataset',\r\n                    backgroundColor: 'transparent',\r\n                    borderColor: 'rgba(255,255,255,.55)',\r\n                    pointBackgroundColor: getStyle('--cui-primary'),\r\n                    data: [65, 59, 84, 84, 51, 55, 40],\r\n                  },\r\n                ],\r\n              }}\r\n              options={{\r\n                plugins: {\r\n                  legend: {\r\n                    display: false,\r\n                  },\r\n                },\r\n                maintainAspectRatio: false,\r\n                scales: {\r\n                  x: {\r\n                    border: {\r\n                      display: false,\r\n                    },\r\n                    grid: {\r\n                      display: false,\r\n                      drawBorder: false,\r\n                    },\r\n                    ticks: {\r\n                      display: false,\r\n                    },\r\n                  },\r\n                  y: {\r\n                    min: 30,\r\n                    max: 89,\r\n                    display: false,\r\n                    grid: {\r\n                      display: false,\r\n                    },\r\n                    ticks: {\r\n                      display: false,\r\n                    },\r\n                  },\r\n                },\r\n                elements: {\r\n                  line: {\r\n                    borderWidth: 1,\r\n                    tension: 0.4,\r\n                  },\r\n                  point: {\r\n                    radius: 4,\r\n                    hitRadius: 10,\r\n                    hoverRadius: 4,\r\n                  },\r\n                },\r\n              }}\r\n            />\r\n          }\r\n        />\r\n      </CCol>\r\n      <CCol sm={6} xl={4} xxl={3}>\r\n        <CWidgetStatsA\r\n          color=\"info\"\r\n          value={\r\n            <>\r\n              $6.200{' '}\r\n              <span className=\"fs-6 fw-normal\">\r\n                (40.9% <CIcon icon={cilArrowTop} />)\r\n              </span>\r\n            </>\r\n          }\r\n          title=\"Income\"\r\n          action={\r\n            <CDropdown alignment=\"end\">\r\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"text-white p-0\">\r\n                <CIcon icon={cilOptions} />\r\n              </CDropdownToggle>\r\n              <CDropdownMenu>\r\n                <CDropdownItem>Action</CDropdownItem>\r\n                <CDropdownItem>Another action</CDropdownItem>\r\n                <CDropdownItem>Something else here...</CDropdownItem>\r\n                <CDropdownItem disabled>Disabled action</CDropdownItem>\r\n              </CDropdownMenu>\r\n            </CDropdown>\r\n          }\r\n          chart={\r\n            <CChartLine\r\n              ref={widgetChartRef2}\r\n              className=\"mt-3 mx-3\"\r\n              style={{ height: '70px' }}\r\n              data={{\r\n                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n                datasets: [\r\n                  {\r\n                    label: 'My First dataset',\r\n                    backgroundColor: 'transparent',\r\n                    borderColor: 'rgba(255,255,255,.55)',\r\n                    pointBackgroundColor: getStyle('--cui-info'),\r\n                    data: [1, 18, 9, 17, 34, 22, 11],\r\n                  },\r\n                ],\r\n              }}\r\n              options={{\r\n                plugins: {\r\n                  legend: {\r\n                    display: false,\r\n                  },\r\n                },\r\n                maintainAspectRatio: false,\r\n                scales: {\r\n                  x: {\r\n                    border: {\r\n                      display: false,\r\n                    },\r\n                    grid: {\r\n                      display: false,\r\n                      drawBorder: false,\r\n                    },\r\n                    ticks: {\r\n                      display: false,\r\n                    },\r\n                  },\r\n                  y: {\r\n                    min: -9,\r\n                    max: 39,\r\n                    display: false,\r\n                    grid: {\r\n                      display: false,\r\n                    },\r\n                    ticks: {\r\n                      display: false,\r\n                    },\r\n                  },\r\n                },\r\n                elements: {\r\n                  line: {\r\n                    borderWidth: 1,\r\n                  },\r\n                  point: {\r\n                    radius: 4,\r\n                    hitRadius: 10,\r\n                    hoverRadius: 4,\r\n                  },\r\n                },\r\n              }}\r\n            />\r\n          }\r\n        />\r\n      </CCol>\r\n      <CCol sm={6} xl={4} xxl={3}>\r\n        <CWidgetStatsA\r\n          color=\"warning\"\r\n          value={\r\n            <>\r\n              2.49%{' '}\r\n              <span className=\"fs-6 fw-normal\">\r\n                (84.7% <CIcon icon={cilArrowTop} />)\r\n              </span>\r\n            </>\r\n          }\r\n          title=\"Conversion Rate\"\r\n          action={\r\n            <CDropdown alignment=\"end\">\r\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"text-white p-0\">\r\n                <CIcon icon={cilOptions} />\r\n              </CDropdownToggle>\r\n              <CDropdownMenu>\r\n                <CDropdownItem>Action</CDropdownItem>\r\n                <CDropdownItem>Another action</CDropdownItem>\r\n                <CDropdownItem>Something else here...</CDropdownItem>\r\n                <CDropdownItem disabled>Disabled action</CDropdownItem>\r\n              </CDropdownMenu>\r\n            </CDropdown>\r\n          }\r\n          chart={\r\n            <CChartLine\r\n              className=\"mt-3\"\r\n              style={{ height: '70px' }}\r\n              data={{\r\n                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n                datasets: [\r\n                  {\r\n                    label: 'My First dataset',\r\n                    backgroundColor: 'rgba(255,255,255,.2)',\r\n                    borderColor: 'rgba(255,255,255,.55)',\r\n                    data: [78, 81, 80, 45, 34, 12, 40],\r\n                    fill: true,\r\n                  },\r\n                ],\r\n              }}\r\n              options={{\r\n                plugins: {\r\n                  legend: {\r\n                    display: false,\r\n                  },\r\n                },\r\n                maintainAspectRatio: false,\r\n                scales: {\r\n                  x: {\r\n                    display: false,\r\n                  },\r\n                  y: {\r\n                    display: false,\r\n                  },\r\n                },\r\n                elements: {\r\n                  line: {\r\n                    borderWidth: 2,\r\n                    tension: 0.4,\r\n                  },\r\n                  point: {\r\n                    radius: 0,\r\n                    hitRadius: 10,\r\n                    hoverRadius: 4,\r\n                  },\r\n                },\r\n              }}\r\n            />\r\n          }\r\n        />\r\n      </CCol>\r\n      <CCol sm={6} xl={4} xxl={3}>\r\n        <CWidgetStatsA\r\n          color=\"danger\"\r\n          value={\r\n            <>\r\n              44K{' '}\r\n              <span className=\"fs-6 fw-normal\">\r\n                (-23.6% <CIcon icon={cilArrowBottom} />)\r\n              </span>\r\n            </>\r\n          }\r\n          title=\"Sessions\"\r\n          action={\r\n            <CDropdown alignment=\"end\">\r\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"text-white p-0\">\r\n                <CIcon icon={cilOptions} />\r\n              </CDropdownToggle>\r\n              <CDropdownMenu>\r\n                <CDropdownItem>Action</CDropdownItem>\r\n                <CDropdownItem>Another action</CDropdownItem>\r\n                <CDropdownItem>Something else here...</CDropdownItem>\r\n                <CDropdownItem disabled>Disabled action</CDropdownItem>\r\n              </CDropdownMenu>\r\n            </CDropdown>\r\n          }\r\n          chart={\r\n            <CChartBar\r\n              className=\"mt-3 mx-3\"\r\n              style={{ height: '70px' }}\r\n              data={{\r\n                labels: [\r\n                  'January',\r\n                  'February',\r\n                  'March',\r\n                  'April',\r\n                  'May',\r\n                  'June',\r\n                  'July',\r\n                  'August',\r\n                  'September',\r\n                  'October',\r\n                  'November',\r\n                  'December',\r\n                  'January',\r\n                  'February',\r\n                  'March',\r\n                  'April',\r\n                ],\r\n                datasets: [\r\n                  {\r\n                    label: 'My First dataset',\r\n                    backgroundColor: 'rgba(255,255,255,.2)',\r\n                    borderColor: 'rgba(255,255,255,.55)',\r\n                    data: [78, 81, 80, 45, 34, 12, 40, 85, 65, 23, 12, 98, 34, 84, 67, 82],\r\n                    barPercentage: 0.6,\r\n                  },\r\n                ],\r\n              }}\r\n              options={{\r\n                maintainAspectRatio: false,\r\n                plugins: {\r\n                  legend: {\r\n                    display: false,\r\n                  },\r\n                },\r\n                scales: {\r\n                  x: {\r\n                    grid: {\r\n                      display: false,\r\n                      drawTicks: false,\r\n                    },\r\n                    ticks: {\r\n                      display: false,\r\n                    },\r\n                  },\r\n                  y: {\r\n                    border: {\r\n                      display: false,\r\n                    },\r\n                    grid: {\r\n                      display: false,\r\n                      drawBorder: false,\r\n                      drawTicks: false,\r\n                    },\r\n                    ticks: {\r\n                      display: false,\r\n                    },\r\n                  },\r\n                },\r\n              }}\r\n            />\r\n          }\r\n        />\r\n      </CCol>\r\n    </CRow>\r\n  )\r\n}\r\n\r\nWidgetsDropdown.propTypes = {\r\n  className: PropTypes.string,\r\n  withCharts: PropTypes.bool,\r\n}\r\n\r\nexport default WidgetsDropdown\r\n"],"names":["MainChart","chartRef","useRef","useEffect","document","documentElement","addEventListener","current","setTimeout","options","scales","x","grid","borderColor","getStyle","color","ticks","y","update","random","Math","round","_jsx","_Fragment","children","CChartLine","ref","style","height","marginTop","data","labels","datasets","label","backgroundColor","concat","pointHoverBackgroundColor","borderWidth","fill","borderDash","maintainAspectRatio","plugins","legend","display","drawOnChartArea","beginAtZero","border","max","maxTicksLimit","stepSize","ceil","elements","line","tension","point","radius","hitRadius","hoverRadius","hoverBorderWidth","Dashboard","progressGroupExample2","title","icon","cilUser","value","cilUserFemale","progressGroupExample3","cibGoogle","percent","cibFacebook","cibTwitter","cibLinkedin","tableExample","avatar","src","avatar1","status","user","name","new","registered","country","flag","cifUs","usage","period","payment","cibCcMastercard","activity","avatar2","cifBr","cibCcVisa","avatar3","cifIn","cibCcStripe","avatar4","cifFr","cibCcPaypal","avatar5","cifEs","cibCcApplePay","avatar6","cifPl","cibCcAmex","_jsxs","WidgetsDropdown","className","CCard","CCardBody","CRow","CCol","sm","id","CButton","CIcon","cilCloudDownload","CButtonGroup","map","active","CCardFooter","xs","cols","gutter","lg","xl","item","index","items","classNames","length","CProgress","thin","WidgetsBrand","withCharts","CCardHeader","md","value1","value2","size","CTable","align","hover","responsive","CTableHead","CTableRow","CTableHeaderCell","cilPeople","CTableBody","CTableDataCell","CAvatar","props","chartOptions","xxl","CWidgetStatsD","chart","CChart","type","values","cilCalendar","widgetChartRef1","widgetChartRef2","pointBackgroundColor","CWidgetStatsA","cilArrowBottom","action","CDropdown","alignment","CDropdownToggle","caret","cilOptions","CDropdownMenu","CDropdownItem","disabled","drawBorder","min","cilArrowTop","CChartBar","barPercentage","drawTicks"],"sourceRoot":""}