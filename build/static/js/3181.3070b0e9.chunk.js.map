{"version":3,"file":"static/js/3181.3070b0e9.chunk.js","mappings":"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","sources":["views/pages/register/Register.js","../node_modules/@coreui/icons/src/free/cil-phone.ts"],"sourcesContent":["import { cilLockLocked, cilPhone, cilUser } from '@coreui/icons';\r\nimport CIcon from '@coreui/icons-react';\r\nimport {\r\n  CAlert,\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CContainer,\r\n  CForm,\r\n  CFormInput,\r\n  CInputGroup,\r\n  CInputGroupText,\r\n  CRow,\r\n} from '@coreui/react';\r\nimport { faEye, faEyeSlash } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next'; // Import i18n hook\r\n\r\nconst Register = () => {\r\n  const { t } = useTranslation(); // Initialize translation hook\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const handleSignUp = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!name || !email || !password || !confirmPassword) {\r\n      setError(t('error.fieldsRequired')); // Use translation key\r\n      return;\r\n    }\r\n\r\n    if (password !== confirmPassword) {\r\n      setError(t('error.passwordMismatch')); // Use translation key\r\n      return;\r\n    }\r\n\r\n    setError('');\r\n    const data = {\r\n      email: email,\r\n      userName: name,\r\n      phone: phone,\r\n      password: password,\r\n      userAgent: navigator.userAgent,\r\n    };\r\n    const myHeaders = new Headers();\r\n    myHeaders.append('Content-Type', 'application/json');\r\n\r\n    const raw = JSON.stringify(data);\r\n\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      headers: myHeaders,\r\n      body: raw,\r\n      redirect: 'follow',\r\n    };\r\n\r\n    try {\r\n      const response = await fetch('https://api.majorsoft.mn/api/userAccount', requestOptions);\r\n      const result = await response.json();\r\n      if (result.isOK) {\r\n        setSuccess(result.message);\r\n        resetForm();\r\n        setTimeout(() => {\r\n          navigate('/login');\r\n        }, 2000);\r\n      } else {\r\n        setError(result.message);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      setError(t('error.general')); // Use translation key\r\n    }\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setName('');\r\n    setEmail('');\r\n    setPhone('');\r\n    setPassword('');\r\n    setConfirmPassword('');\r\n  };\r\n\r\n  const togglePassword = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-body-tertiary min-vh-100 d-flex flex-row align-items-center\">\r\n      <CContainer>\r\n        <CRow className=\"justify-content-center\">\r\n          <CCol md={9} lg={7} xl={6}>\r\n            <CCard className=\"mx-4\">\r\n              <CCardBody className=\"p-4\">\r\n                <CForm onSubmit={handleSignUp}>\r\n                  <h1>{t('register.title')}</h1> \r\n                  <p className=\"text-body-secondary\">{t('register.subtitle')}</p> \r\n                  <CInputGroup className=\"mb-3\">\r\n                    <CInputGroupText>\r\n                      <CIcon icon={cilUser} />\r\n                    </CInputGroupText>\r\n                    <CFormInput\r\n                      placeholder={t('register.namePlaceholder')} // Translation for \"Нэр\"\r\n                      autoComplete=\"username\"\r\n                      value={name}\r\n                      onChange={(e) => setName(e.target.value)}\r\n                    />\r\n                  </CInputGroup>\r\n                  <CInputGroup className=\"mb-3\">\r\n                    <CInputGroupText>@</CInputGroupText>\r\n                    <CFormInput\r\n                      placeholder={t('register.emailPlaceholder')} // Translation for \"Email\"\r\n                      autoComplete=\"email\"\r\n                      value={email}\r\n                      onChange={(e) => setEmail(e.target.value)}\r\n                    />\r\n                  </CInputGroup>\r\n                  <CInputGroup className=\"mb-3\">\r\n                    <CInputGroupText>\r\n                      <CIcon icon={cilPhone} />\r\n                    </CInputGroupText>\r\n                    <CFormInput\r\n                      placeholder={t('register.phonePlaceholder')}\r\n                      autoComplete=\"Phone_number\"\r\n                      value={phone}\r\n                      onChange={(e) => setPhone(e.target.value)}\r\n                    />\r\n                  </CInputGroup>\r\n                  <CInputGroup className=\"mb-3\">\r\n                    <CInputGroupText>\r\n                      <CIcon icon={cilLockLocked} />\r\n                    </CInputGroupText>\r\n                    <CFormInput\r\n                      type={showPassword ? 'text' : 'password'}\r\n                      placeholder={t('register.passwordPlaceholder')}\r\n                      autoComplete=\"new-password\"\r\n                      value={password}\r\n                      onChange={(e) => setPassword(e.target.value)}\r\n                    />\r\n                  </CInputGroup>\r\n                  <CInputGroup className=\"mb-4\">\r\n                    <CInputGroupText>\r\n                      <CIcon icon={cilLockLocked} />\r\n                    </CInputGroupText>\r\n                    <CFormInput\r\n                      type={showPassword ? 'text' : 'password'}\r\n                      placeholder={t('register.confirmPasswordPlaceholder')}\r\n                      autoComplete=\"new-password\"\r\n                      value={confirmPassword}\r\n                      onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    />\r\n                    <CInputGroupText onClick={togglePassword} style={{ cursor: 'pointer' }}>\r\n                      <FontAwesomeIcon icon={showPassword ? faEyeSlash : faEye} />\r\n                    </CInputGroupText>\r\n                  </CInputGroup>\r\n                  {success && (\r\n                    <CAlert color=\"success\" dismissible onClose={() => setSuccess('')}>\r\n                      {success}\r\n                    </CAlert>\r\n                  )}\r\n                  {error && (\r\n                    <CAlert color=\"danger\" dismissible onClose={() => setError('')}>\r\n                      {error}\r\n                    </CAlert>\r\n                  )}\r\n                  <div className=\"d-grid\">\r\n                    <CButton color=\"primary\" type=\"submit\">\r\n                      {t('register.submitButton')} \r\n                    </CButton>\r\n                  </div>\r\n                </CForm>\r\n              </CCardBody>\r\n            </CCard>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","export var cilPhone = [\"512 512\", \"<path fill='var(--ci-primary-color, currentColor)' d='M449.366,89.648l-.685-.428L362.088,46.559,268.625,171.176l43,57.337a88.529,88.529,0,0,1-83.115,83.114l-57.336-43L46.558,362.088l42.306,85.869.356.725.429.684a25.085,25.085,0,0,0,21.393,11.857h22.344A327.836,327.836,0,0,0,461.222,133.386V111.041A25.084,25.084,0,0,0,449.366,89.648Zm-20.144,43.738c0,163.125-132.712,295.837-295.836,295.837h-18.08L87,371.76l84.18-63.135,46.867,35.149h5.333a120.535,120.535,0,0,0,120.4-120.4v-5.333l-35.149-46.866L371.759,87l57.463,28.311Z' class='ci-primary'/>\"];\n"],"names":["Register","t","useTranslation","name","setName","useState","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","phone","setPhone","error","setError","success","setSuccess","navigate","useNavigate","showPassword","setShowPassword","resetForm","_jsx","className","children","CContainer","CRow","CCol","md","lg","xl","CCard","CCardBody","_jsxs","CForm","onSubmit","async","e","preventDefault","data","userName","userAgent","navigator","myHeaders","Headers","append","requestOptions","method","headers","body","JSON","stringify","redirect","response","fetch","result","json","isOK","message","setTimeout","console","CInputGroup","CInputGroupText","CIcon","icon","cilUser","CFormInput","placeholder","autoComplete","value","onChange","target","cilPhone","cilLockLocked","type","onClick","togglePassword","style","cursor","FontAwesomeIcon","faEyeSlash","faEye","CAlert","color","dismissible","onClose","CButton"],"sourceRoot":""}