{"version":3,"file":"static/js/4721.c4315963.chunk.js","mappings":"mbAqBA,MA8HA,EA9HcA,KACZ,MAAOC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,KAClCC,EAAUC,IAAeF,EAAAA,EAAAA,UAAS,KAClCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,KAC5BK,EAAcC,IAAmBN,EAAAA,EAAAA,UAAS,KAC1CO,EAAcC,IAAmBR,EAAAA,EAAAA,WAAS,GAC3CS,GAAWC,EAAAA,EAAAA,MA4CjB,OACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iEAAgEC,UAC7EF,EAAAA,EAAAA,KAACG,EAAAA,EAAU,CAAAD,UACTF,EAAAA,EAAAA,KAACI,EAAAA,EAAI,CAACH,UAAU,yBAAwBC,UACtCF,EAAAA,EAAAA,KAACK,EAAAA,EAAI,CAACC,GAAI,EAAEJ,UACVK,EAAAA,EAAAA,MAACC,EAAAA,EAAU,CAAAN,SAAA,EACTF,EAAAA,EAAAA,KAACS,EAAAA,EAAK,CAACR,UAAU,MAAKC,UACpBF,EAAAA,EAAAA,KAACU,EAAAA,EAAS,CAAAR,UACRK,EAAAA,EAAAA,MAACI,EAAAA,EAAK,CAACC,SAlDHC,UAKlB,GAJAC,EAAEC,iBACFtB,EAAS,IACTE,EAAgB,KAEXR,IAAaG,EAEhB,YADAK,EAAgB,yHAIlB,MAAMqB,EAAY,IAAIC,QACtBD,EAAUE,OAAO,eAAgB,oBAEjC,MAKMC,EAAiB,CACrBC,OAAQ,OACRC,QAASL,EACTM,KARUC,KAAKC,UAAU,CACzB,SAAYrC,EACZ,SAAYG,KASd,IACE,MAAMmC,QAAiBC,MAAM,qCAAsCP,GAC7DQ,QAAeF,EAASG,OAE1BH,EAASI,GACX/B,EAAS,cAETH,EAAgBgC,EAAOG,QAE3B,CAAE,MAAOtC,GACPG,EAAgB,8KAClB,GAe2CO,SAAA,EAC3BF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,gDACJF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,sBAAqBC,SAAC,6NACnCK,EAAAA,EAAAA,MAACwB,EAAAA,EAAW,CAAC9B,UAAU,OAAMC,SAAA,EAC3BF,EAAAA,EAAAA,KAACgC,EAAAA,EAAe,CAAA9B,UACdF,EAAAA,EAAAA,KAACiC,EAAAA,GAAK,CAACC,KAAMC,EAAAA,OAEfnC,EAAAA,EAAAA,KAACoC,EAAAA,EAAU,CACTC,YAAY,8FACZC,aAAa,WACbC,MAAOpD,EACPqD,SAAW1B,GAAM1B,EAAY0B,EAAE2B,OAAOF,aAG1ChC,EAAAA,EAAAA,MAACwB,EAAAA,EAAW,CAAC9B,UAAU,OAAMC,SAAA,EAC3BF,EAAAA,EAAAA,KAACgC,EAAAA,EAAe,CAAA9B,UACdF,EAAAA,EAAAA,KAACiC,EAAAA,GAAK,CAACC,KAAMQ,EAAAA,OAEf1C,EAAAA,EAAAA,KAACoC,EAAAA,EAAU,CACTO,KAAM/C,EAAe,OAAS,WAC9ByC,YAAY,wCACZC,aAAa,mBACbC,MAAOjD,EACPkD,SAAW1B,GAAMvB,EAAYuB,EAAE2B,OAAOF,UAExCvC,EAAAA,EAAAA,KAACgC,EAAAA,EAAe,CAACW,KAAK,SAASC,QArClBC,KAC/BhD,GAAiBD,EAAa,EAoCqDM,UAC/DF,EAAAA,EAAAA,KAAC8C,EAAAA,EAAe,CAACZ,KAAMtC,EAAemD,EAAAA,IAAaC,EAAAA,WAGtDtD,IAAgBM,EAAAA,EAAAA,KAACiD,EAAAA,EAAM,CAACC,MAAM,SAASC,aAAW,EAACC,QAASA,IAAMzD,EAAgB,IAAIO,SAAER,KACzFa,EAAAA,EAAAA,MAACH,EAAAA,EAAI,CAAAF,SAAA,EACHF,EAAAA,EAAAA,KAACK,EAAAA,EAAI,CAACgD,GAAI,EAAEnD,UACVF,EAAAA,EAAAA,KAACsD,EAAAA,EAAO,CAACX,KAAK,SAASO,MAAM,UAAUjD,UAAU,OAAMC,SAAC,kDAI1DF,EAAAA,EAAAA,KAACK,EAAAA,EAAI,CAACgD,GAAI,EAAGpD,UAAU,aAAYC,UACjCF,EAAAA,EAAAA,KAACuD,EAAAA,GAAI,CAACC,GAAG,kBAAiBtD,UACxBF,EAAAA,EAAAA,KAACsD,EAAAA,EAAO,CAACJ,MAAM,OAAOjD,UAAU,OAAMC,SAAC,oGASnDF,EAAAA,EAAAA,KAACS,EAAAA,EAAK,CAACR,UAAU,6BAA4BC,UAC3CF,EAAAA,EAAAA,KAACU,EAAAA,EAAS,CAACT,UAAU,cAAaC,UAChCK,EAAAA,EAAAA,MAAA,OAAAL,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,kEACJF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,sIACHF,EAAAA,EAAAA,KAACuD,EAAAA,GAAI,CAACC,GAAG,YAAWtD,UAClBF,EAAAA,EAAAA,KAACsD,EAAAA,EAAO,CAACJ,MAAM,UAAUjD,UAAU,OAAMC,SAAC,6GAWtD,C,4FCpIGM,GAAaiD,EAAAA,EAAAA,aACxB,SAACC,EAAkCC,GAAhC,IAAAzD,EAAQwD,EAAAxD,SAAED,EAASyD,EAAAzD,UAAK2D,GAA1BC,EAAAA,EAAAA,IAAAH,EAAA,0BACC,OACEI,EAAAA,cAAA,OAAAC,EAAAA,EAAAA,IAAA,CAAK9D,WAAW+D,EAAAA,EAAAA,GAAW,aAAc/D,IAAgB2D,EAAI,CAAED,IAAKA,IACjEzD,EAGP,IAGFM,EAAWyD,UAAY,CACrB/D,SAAUgE,IAAAA,KACVjE,UAAWiE,IAAAA,QAGb1D,EAAW2D,YAAc,Y","sources":["views/pages/login/Login.js","../node_modules/@coreui/react/src/components/card/CCardGroup.tsx"],"sourcesContent":["import { cilLockLocked, cilUser } from '@coreui/icons'\r\nimport CIcon from '@coreui/icons-react'\r\nimport {\r\n  CAlert,\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardGroup,\r\n  CCol,\r\n  CContainer,\r\n  CForm,\r\n  CFormInput,\r\n  CInputGroup,\r\n  CInputGroupText,\r\n  CRow\r\n} from '@coreui/react'\r\nimport { faEye, faEyeSlash } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { useState } from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\n\r\nconst Login = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [alertMessage, setAlertMessage] = useState('');\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault()\r\n    setError('')\r\n    setAlertMessage('')\r\n\r\n    if (!username || !password) {\r\n      setAlertMessage('Бүх талбарыг бөглөн үү')\r\n      return\r\n    }\r\n\r\n    const myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n    const raw = JSON.stringify({\r\n      \"username\": username,\r\n      \"password\": password\r\n    });\r\n\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: raw,\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(\"https://api.majorsoft.mn/api/login\", requestOptions);\r\n      const result = await response.json();\r\n\r\n      if (response.ok) {\r\n        navigate('/dashboard');\r\n      } else {\r\n        setAlertMessage(result.message);\r\n      }\r\n    } catch (error) {\r\n      setAlertMessage('Сүлжээнд холбогдох алдаа гарлаа');\r\n    }\r\n  }\r\n\r\n  const togglePasswordVisibility = () => {\r\n    setShowPassword(!showPassword)\r\n  }\r\n\r\n  return (\r\n    <div className=\"bg-body-tertiary min-vh-100 d-flex flex-row align-items-center\">\r\n      <CContainer>\r\n        <CRow className=\"justify-content-center\">\r\n          <CCol md={8}>\r\n            <CCardGroup>\r\n              <CCard className=\"p-4\">\r\n                <CCardBody>\r\n                  <CForm onSubmit={handleLogin}>\r\n                    <h1>Нэвтрэх</h1>\r\n                    <p className=\"text-body-secondary\">Та өөрийн бүртгэлтэй хаягаар нэвтрэнэ үү</p>\r\n                    <CInputGroup className=\"mb-3\">\r\n                      <CInputGroupText>\r\n                        <CIcon icon={cilUser} />\r\n                      </CInputGroupText>\r\n                      <CFormInput\r\n                        placeholder=\"Хэрэглэгчийн нэр\"\r\n                        autoComplete=\"username\"\r\n                        value={username}\r\n                        onChange={(e) => setUsername(e.target.value)}\r\n                      />\r\n                    </CInputGroup>\r\n                    <CInputGroup className=\"mb-4\">\r\n                      <CInputGroupText>\r\n                        <CIcon icon={cilLockLocked} />\r\n                      </CInputGroupText>\r\n                      <CFormInput\r\n                        type={showPassword ? \"text\" : \"password\"}\r\n                        placeholder=\"Нууц үг\"\r\n                        autoComplete=\"current-password\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                      />\r\n                      <CInputGroupText type=\"button\" onClick={togglePasswordVisibility}>\r\n                        <FontAwesomeIcon icon={showPassword ? faEyeSlash : faEye} />\r\n                      </CInputGroupText>\r\n                    </CInputGroup>\r\n                    {alertMessage && <CAlert color='danger' dismissible onClose={() => setAlertMessage('')}>{alertMessage}</CAlert>}\r\n                    <CRow>\r\n                      <CCol xs={6}>\r\n                        <CButton type=\"submit\" color=\"primary\" className=\"px-4\">\r\n                          Нэвтрэх\r\n                        </CButton>\r\n                      </CCol>\r\n                      <CCol xs={6} className=\"text-right\">\r\n                        <Link to=\"/reset-password\">\r\n                          <CButton color=\"link\" className=\"px-0\">\r\n                            Нууц үг мартсан\r\n                          </CButton>\r\n                        </Link>\r\n                      </CCol>\r\n                    </CRow>\r\n                  </CForm>\r\n                </CCardBody>\r\n              </CCard>\r\n              <CCard className=\"text-white bg-primary py-5\">\r\n                <CCardBody className=\"text-center\">\r\n                  <div>\r\n                    <h2>Бүртгүүлэх</h2>\r\n                    <p>Бизнесээ ухаалгаар хяна</p>\r\n                    <Link to=\"/register\">\r\n                      <CButton color=\"primary\" className=\"mt-3\">\r\n                        Одоо бүртгүүлэх\r\n                      </CButton>\r\n                    </Link>\r\n                  </div>\r\n                </CCardBody>\r\n              </CCard>\r\n            </CCardGroup>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","import React, { forwardRef, HTMLAttributes } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nexport interface CCardGroupProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n}\n\nexport const CCardGroup = forwardRef<HTMLDivElement, CCardGroupProps>(\n  ({ children, className, ...rest }, ref) => {\n    return (\n      <div className={classNames('card-group', className)} {...rest} ref={ref}>\n        {children}\n      </div>\n    )\n  },\n)\n\nCCardGroup.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n}\n\nCCardGroup.displayName = 'CCardGroup'\n"],"names":["Login","username","setUsername","useState","password","setPassword","error","setError","alertMessage","setAlertMessage","showPassword","setShowPassword","navigate","useNavigate","_jsx","className","children","CContainer","CRow","CCol","md","_jsxs","CCardGroup","CCard","CCardBody","CForm","onSubmit","async","e","preventDefault","myHeaders","Headers","append","requestOptions","method","headers","body","JSON","stringify","response","fetch","result","json","ok","message","CInputGroup","CInputGroupText","CIcon","icon","cilUser","CFormInput","placeholder","autoComplete","value","onChange","target","cilLockLocked","type","onClick","togglePasswordVisibility","FontAwesomeIcon","faEyeSlash","faEye","CAlert","color","dismissible","onClose","xs","CButton","Link","to","forwardRef","_a","ref","rest","__rest","React","__assign","classNames","propTypes","PropTypes","displayName"],"sourceRoot":""}