{"version":3,"file":"static/js/9484.4fff36bf.chunk.js","mappings":"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","sources":["views/base/collapses/Collapses.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { CButton, CCard, CCardBody, CCardHeader, CCol, CCollapse, CRow } from '@coreui/react';\r\nimport { DocsExample } from 'src/components';\r\n\r\nconst Collapses = () => {\r\n  const [visible, setVisible] = useState(false);\r\n  const [visibleHorizontal, setVisibleHorizontal] = useState(false);\r\n  const [visibleA, setVisibleA] = useState(false);\r\n  const [visibleB, setVisibleB] = useState(false);\r\n\r\n  // State to hold API results\r\n  const [resultA, setResultA] = useState(null);\r\n  const [resultB, setResultB] = useState(null);\r\n\r\n  // Function to simulate API calls\r\n  const fetchResults = async () => {\r\n    // Simulate fetching data\r\n    const fetchDataA = new Promise((resolve) =>\r\n      setTimeout(() => resolve(\"Result A content from API\"), 1000)\r\n    );\r\n    const fetchDataB = new Promise((resolve) =>\r\n      setTimeout(() => resolve(\"Result B content from API\"), 1000)\r\n    );\r\n\r\n    // Set results to state\r\n    setResultA(await fetchDataA);\r\n    setResultB(await fetchDataB);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchResults();\r\n  }, []);\r\n\r\n  return (\r\n    <CRow>\r\n      {/* Basic Collapse */}\r\n      <CCol xs={12}>\r\n        <CCard className=\"mb-4\">\r\n          <CCardHeader>\r\n            <strong>React Collapse</strong>\r\n          </CCardHeader>\r\n          <CCardBody>\r\n            <p className=\"text-body-secondary small\">You can use a link or a button component.</p>\r\n            <DocsExample href=\"components/collapse\">\r\n              <CButton\r\n                color=\"primary\"\r\n                href=\"#\"\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  setVisible(!visible);\r\n                }}\r\n              >\r\n                Link\r\n              </CButton>\r\n              <CButton color=\"primary\" onClick={() => setVisible(!visible)}>\r\n                Button\r\n              </CButton>\r\n              <CCollapse visible={visible}>\r\n                <CCard className=\"mt-3\">\r\n                  <CCardBody>\r\n                    Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry\r\n                    richardson ad squid. Nihil anim keffiyeh helvetica, craft beer labore wes\r\n                    anderson cred nesciunt sapiente ea proident.\r\n                  </CCardBody>\r\n                </CCard>\r\n              </CCollapse>\r\n            </DocsExample>\r\n          </CCardBody>\r\n        </CCard>\r\n      </CCol>\r\n\r\n      {/* Horizontal Collapse */}\r\n      <CCol xs={12}>\r\n        <CCard className=\"mb-4\">\r\n          <CCardHeader>\r\n            <strong>React Collapse</strong> <small> Horizontal</small>\r\n          </CCardHeader>\r\n          <CCardBody>\r\n            <p className=\"text-body-secondary small\">You can use a link or a button component.</p>\r\n            <DocsExample href=\"components/collapse#horizontal\">\r\n              <CButton\r\n                className=\"mb-3\"\r\n                color=\"primary\"\r\n                onClick={() => setVisibleHorizontal(!visibleHorizontal)}\r\n                aria-expanded={visibleHorizontal}\r\n                aria-controls=\"collapseWidthExample\"\r\n              >\r\n                Button\r\n              </CButton>\r\n              <div style={{ minHeight: '120px' }}>\r\n                <CCollapse id=\"collapseWidthExample\" horizontal visible={visibleHorizontal}>\r\n                  <CCard style={{ width: '300px' }}>\r\n                    <CCardBody>\r\n                      This is some placeholder content for a horizontal collapse. It&#39;s hidden by\r\n                      default and shown when triggered.\r\n                    </CCardBody>\r\n                  </CCard>\r\n                </CCollapse>\r\n              </div>\r\n            </DocsExample>\r\n          </CCardBody>\r\n        </CCard>\r\n      </CCol>\r\n\r\n      {/* Multi-target Collapse */}\r\n      <CCol xs={12}>\r\n        <CCard className=\"mb-4\">\r\n          <CCardHeader>\r\n            <strong>React Collapse</strong> <small> Multi target</small>\r\n          </CCardHeader>\r\n          <CCardBody>\r\n            <p className=\"text-body-secondary small\">\r\n              A <code>&lt;CButton&gt;</code> can show and hide multiple elements.\r\n            </p>\r\n            <DocsExample href=\"components/collapse#multiple-targets\">\r\n              <CButton color=\"primary\" onClick={() => setVisibleA(!visibleA)}>\r\n                Toggle first element\r\n              </CButton>\r\n              <CButton color=\"primary\" onClick={() => setVisibleB(!visibleB)}>\r\n                Toggle second element\r\n              </CButton>\r\n              <CButton\r\n                color=\"primary\"\r\n                onClick={() => {\r\n                  setVisibleA(!visibleA);\r\n                  setVisibleB(!visibleB);\r\n                }}\r\n              >\r\n                Toggle both elements\r\n              </CButton>\r\n              <CRow>\r\n                <CCol xs={6}>\r\n                  <CCollapse visible={visibleA}>\r\n                    <CCard className=\"mt-3\">\r\n                      <CCardBody>\r\n                        {resultA ? resultA : \"Loading...\"}\r\n                      </CCardBody>\r\n                    </CCard>\r\n                  </CCollapse>\r\n                </CCol>\r\n                <CCol xs={6}>\r\n                  <CCollapse visible={visibleB}>\r\n                    <CCard className=\"mt-3\">\r\n                      <CCardBody>\r\n                        {resultB ? resultB : \"Loading...\"}\r\n                      </CCardBody>\r\n                    </CCard>\r\n                  </CCollapse>\r\n                </CCol>\r\n              </CRow>\r\n            </DocsExample>\r\n          </CCardBody>\r\n        </CCard>\r\n      </CCol>\r\n    </CRow>\r\n  );\r\n};\r\n\r\nexport default Collapses;\r\n"],"names":["Collapses","visible","setVisible","useState","visibleHorizontal","setVisibleHorizontal","visibleA","setVisibleA","visibleB","setVisibleB","resultA","setResultA","resultB","setResultB","useEffect","async","fetchDataA","Promise","resolve","setTimeout","fetchDataB","fetchResults","_jsxs","CRow","children","_jsx","CCol","xs","CCard","className","CCardHeader","CCardBody","DocsExample","href","CButton","color","onClick","e","preventDefault","CCollapse","style","minHeight","id","horizontal","width"],"sourceRoot":""}