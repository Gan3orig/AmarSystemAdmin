{"version":3,"file":"static/js/1023.970c220d.chunk.js","mappings":"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","sources":["views/admin/terminalMap.js","../node_modules/@coreui/react/src/components/alert/CAlert.tsx","../node_modules/@react-leaflet/core/lib/context.js","../node_modules/@react-leaflet/core/lib/element.js","../node_modules/@react-leaflet/core/lib/attribution.js","../node_modules/@react-leaflet/core/lib/events.js","../node_modules/@react-leaflet/core/lib/layer.js","../node_modules/@react-leaflet/core/lib/generic.js","../node_modules/@react-leaflet/core/lib/component.js","../node_modules/@react-leaflet/core/lib/div-overlay.js","../node_modules/@react-leaflet/core/lib/pane.js","../node_modules/react-leaflet/lib/MapContainer.js","../node_modules/react-leaflet/lib/Marker.js","../node_modules/react-leaflet/lib/Popup.js","../node_modules/react-leaflet/lib/TileLayer.js","../node_modules/@react-leaflet/core/lib/grid-layer.js"],"sourcesContent":["//import React from 'react';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\n//import React, { useEffect, useState } from 'react';\r\nimport L from 'leaflet';\r\nimport markerIcon from 'src/assets/images/marker.png';\r\nimport markerShadow from 'leaflet/dist/images/marker-shadow.png';\r\nimport { CAlert, CContainer } from '@coreui/react'\r\n\r\n\r\n// Fix for default marker icons in Leaflet\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\n\r\nL.Icon.Default.mergeOptions({\r\n  iconUrl: markerIcon,\r\n  shadowUrl: markerShadow,\r\n  iconSize: [20, 20],\r\n  shadowSize: [12, 12]\r\n});\r\n\r\nconst TerminalMap = () => {\r\n  //const position = [47.8914133262357,106.896511316299]; // Default position (latitude, longitude)\r\n  const [locations, setLocations] = useState([]);\r\n  const customIcon = new L.Icon({\r\n    iconUrl: markerIcon,\r\n    iconSize: [20, 20],\r\n    iconAnchor: [21, 21],\r\n    popupAnchor: [1, -34],\r\n    shadowUrl: markerShadow,\r\n    shadowSize: [12, 12]\r\n  });\r\n  const [visible, setVisible] = useState(false)\r\n  useEffect(() => {\r\n    const fetchLocations = async () => {\r\n      const token = localStorage.getItem('token'); // Retrieve the Bearer token from localStorage or another storage mechanism\r\n      try {\r\n        const response = await fetch('https://api.majorsoft.mn/api/terminalMap', {\r\n          method: 'GET',\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`, // Attach the token to the Authorization header\r\n            'Content-Type': 'application/json'\r\n          }\r\n        });\r\n        if (response.ok) {\r\n          setVisible(false);\r\n          const data = await response.json();\r\n          setLocations(data); // Update state with the fetched data\r\n        } else {\r\n          setVisible(true);\r\n          console.error('Failed to fetch locations:', response.status);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching locations:', error);\r\n      }\r\n    };\r\n    fetchLocations(); // Call the async function to fetch data\r\n  }, []);\r\n  return (\r\n    <CContainer>\r\n      <CAlert color=\"warning\" visible={visible} closeButton onShowChange={setVisible}>\r\n        <strong>Анхааруулга!</strong> Хэрэглэгчээр нэвтрээгүй байна. <a href=\"/#/login\" className=\"alert-link\">Нэвтрэх</a>.\r\n      </CAlert>\r\n      <MapContainer center={[47, 106]} zoom={6} style={{ height: '80vh', width: '100%' }}>\r\n      \r\n      <TileLayer\r\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n      />\r\n      {locations.map(location => (\r\n        <Marker key={location.terminalId} position={[location.locationLat, location.locationLng]} icon={customIcon} >\r\n          <Popup>\r\n            <strong>{location.businessName}</strong><br />\r\n            {location.entityName}\r\n            <br/>✆{location.phone1},{location.phone2}\r\n            <br/>®{location.registerNo}\r\n            <br/>{location.createDate}\r\n          </Popup>\r\n        </Marker>\r\n      ))}\r\n    </MapContainer></CContainer>\r\n  );\r\n};\r\n\r\nexport default TerminalMap;\r\n","import React, { forwardRef, HTMLAttributes, useEffect, useState, useRef } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport { Transition } from 'react-transition-group'\n\nimport { CCloseButton } from '../close-button/CCloseButton'\n\nimport { useForkedRef } from '../../hooks'\nimport { colorPropType } from '../../props'\nimport type { Colors } from '../../types'\n\nexport interface CAlertProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * A string of all className you want applied to the component.\n   */\n  className?: string\n  /**\n   * Sets the color context of the component to one of CoreUI’s themed colors.\n   *\n   * @type 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'dark' | 'light' | string\n   */\n  color: Colors\n  /**\n   * Optionally add a close button to alert and allow it to self dismiss.\n   */\n  dismissible?: boolean\n  /**\n   * Callback fired when the component requests to be closed.\n   */\n  onClose?: () => void\n  /**\n   * Set the alert variant to a solid.\n   */\n  variant?: 'solid' | string\n  /**\n   * Toggle the visibility of component.\n   */\n  visible?: boolean\n}\n\nexport const CAlert = forwardRef<HTMLDivElement, CAlertProps>(\n  (\n    {\n      children,\n      className,\n      color = 'primary',\n      dismissible,\n      variant,\n      visible = true,\n      onClose,\n      ...rest\n    },\n    ref,\n  ) => {\n    const alertRef = useRef<HTMLDivElement>(null)\n    const forkedRef = useForkedRef(ref, alertRef)\n    const [_visible, setVisible] = useState(visible)\n\n    useEffect(() => {\n      setVisible(visible)\n    }, [visible])\n\n    return (\n      <Transition\n        in={_visible}\n        mountOnEnter\n        nodeRef={alertRef}\n        onExit={onClose}\n        timeout={150}\n        unmountOnExit\n      >\n        {(state) => (\n          <div\n            className={classNames(\n              'alert',\n              variant === 'solid' ? `bg-${color} text-white` : `alert-${color}`,\n              {\n                'alert-dismissible fade': dismissible,\n                show: state === 'entered',\n              },\n              className,\n            )}\n            role=\"alert\"\n            {...rest}\n            ref={forkedRef}\n          >\n            {children}\n            {dismissible && <CCloseButton onClick={() => setVisible(false)} />}\n          </div>\n        )}\n      </Transition>\n    )\n  },\n)\n\nCAlert.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  color: colorPropType.isRequired,\n  dismissible: PropTypes.bool,\n  onClose: PropTypes.func,\n  variant: PropTypes.string,\n  visible: PropTypes.bool,\n}\n\nCAlert.displayName = 'CAlert'\n","import { createContext, useContext } from 'react';\nexport const CONTEXT_VERSION = 1;\nexport function createLeafletContext(map) {\n    return Object.freeze({\n        __version: CONTEXT_VERSION,\n        map\n    });\n}\nexport function extendContext(source, extra) {\n    return Object.freeze({\n        ...source,\n        ...extra\n    });\n}\nexport const LeafletContext = createContext(null);\nexport const LeafletProvider = LeafletContext.Provider;\nexport function useLeafletContext() {\n    const context = useContext(LeafletContext);\n    if (context == null) {\n        throw new Error('No context provided: useLeafletContext() can only be used in a descendant of <MapContainer>');\n    }\n    return context;\n}\n","import { useEffect, useRef } from 'react';\nexport function createElementObject(instance, context, container) {\n    return Object.freeze({\n        instance,\n        context,\n        container\n    });\n}\nexport function createElementHook(createElement, updateElement) {\n    if (updateElement == null) {\n        return function useImmutableLeafletElement(props, context) {\n            const elementRef = useRef();\n            if (!elementRef.current) elementRef.current = createElement(props, context);\n            return elementRef;\n        };\n    }\n    return function useMutableLeafletElement(props, context) {\n        const elementRef = useRef();\n        if (!elementRef.current) elementRef.current = createElement(props, context);\n        const propsRef = useRef(props);\n        const { instance  } = elementRef.current;\n        useEffect(function updateElementProps() {\n            if (propsRef.current !== props) {\n                updateElement(instance, props, propsRef.current);\n                propsRef.current = props;\n            }\n        }, [\n            instance,\n            props,\n            context\n        ]);\n        return elementRef;\n    };\n}\n","import { useEffect, useRef } from 'react';\nexport function useAttribution(map, attribution) {\n    const attributionRef = useRef(attribution);\n    useEffect(function updateAttribution() {\n        if (attribution !== attributionRef.current && map.attributionControl != null) {\n            if (attributionRef.current != null) {\n                map.attributionControl.removeAttribution(attributionRef.current);\n            }\n            if (attribution != null) {\n                map.attributionControl.addAttribution(attribution);\n            }\n        }\n        attributionRef.current = attribution;\n    }, [\n        map,\n        attribution\n    ]);\n}\n","import { useEffect, useRef } from 'react';\nexport function useEventHandlers(element, eventHandlers) {\n    const eventHandlersRef = useRef();\n    useEffect(function addEventHandlers() {\n        if (eventHandlers != null) {\n            element.instance.on(eventHandlers);\n        }\n        eventHandlersRef.current = eventHandlers;\n        return function removeEventHandlers() {\n            if (eventHandlersRef.current != null) {\n                element.instance.off(eventHandlersRef.current);\n            }\n            eventHandlersRef.current = null;\n        };\n    }, [\n        element,\n        eventHandlers\n    ]);\n}\n","import { useEffect } from 'react';\nimport { useAttribution } from './attribution.js';\nimport { useLeafletContext } from './context.js';\nimport { useEventHandlers } from './events.js';\nimport { withPane } from './pane.js';\nexport function useLayerLifecycle(element, context) {\n    useEffect(function addLayer() {\n        const container = context.layerContainer ?? context.map;\n        container.addLayer(element.instance);\n        return function removeLayer() {\n            context.layerContainer?.removeLayer(element.instance);\n            context.map.removeLayer(element.instance);\n        };\n    }, [\n        context,\n        element\n    ]);\n}\nexport function createLayerHook(useElement) {\n    return function useLayer(props) {\n        const context = useLeafletContext();\n        const elementRef = useElement(withPane(props, context), context);\n        useAttribution(context.map, props.attribution);\n        useEventHandlers(elementRef.current, props.eventHandlers);\n        useLayerLifecycle(elementRef.current, context);\n        return elementRef;\n    };\n}\n","import { createContainerComponent, createDivOverlayComponent, createLeafComponent } from './component.js';\nimport { createControlHook } from './control.js';\nimport { createElementHook, createElementObject } from './element.js';\nimport { createLayerHook } from './layer.js';\nimport { createDivOverlayHook } from './div-overlay.js';\nimport { createPathHook } from './path.js';\nexport function createControlComponent(createInstance) {\n    function createElement(props, context) {\n        return createElementObject(createInstance(props), context);\n    }\n    const useElement = createElementHook(createElement);\n    const useControl = createControlHook(useElement);\n    return createLeafComponent(useControl);\n}\nexport function createLayerComponent(createElement, updateElement) {\n    const useElement = createElementHook(createElement, updateElement);\n    const useLayer = createLayerHook(useElement);\n    return createContainerComponent(useLayer);\n}\nexport function createOverlayComponent(createElement, useLifecycle) {\n    const useElement = createElementHook(createElement);\n    const useOverlay = createDivOverlayHook(useElement, useLifecycle);\n    return createDivOverlayComponent(useOverlay);\n}\nexport function createPathComponent(createElement, updateElement) {\n    const useElement = createElementHook(createElement, updateElement);\n    const usePath = createPathHook(useElement);\n    return createContainerComponent(usePath);\n}\nexport function createTileLayerComponent(createElement, updateElement) {\n    const useElement = createElementHook(createElement, updateElement);\n    const useLayer = createLayerHook(useElement);\n    return createLeafComponent(useLayer);\n}\n","import React, { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { LeafletProvider } from './context.js';\nexport function createContainerComponent(useElement) {\n    function ContainerComponent(props, forwardedRef) {\n        const { instance , context  } = useElement(props).current;\n        useImperativeHandle(forwardedRef, ()=>instance);\n        return props.children == null ? null : /*#__PURE__*/ React.createElement(LeafletProvider, {\n            value: context\n        }, props.children);\n    }\n    return /*#__PURE__*/ forwardRef(ContainerComponent);\n}\nexport function createDivOverlayComponent(useElement) {\n    function OverlayComponent(props, forwardedRef) {\n        const [isOpen, setOpen] = useState(false);\n        const { instance  } = useElement(props, setOpen).current;\n        useImperativeHandle(forwardedRef, ()=>instance);\n        useEffect(function updateOverlay() {\n            if (isOpen) {\n                instance.update();\n            }\n        }, [\n            instance,\n            isOpen,\n            props.children\n        ]);\n        // @ts-ignore _contentNode missing in type definition\n        const contentNode = instance._contentNode;\n        return contentNode ? /*#__PURE__*/ createPortal(props.children, contentNode) : null;\n    }\n    return /*#__PURE__*/ forwardRef(OverlayComponent);\n}\nexport function createLeafComponent(useElement) {\n    function LeafComponent(props, forwardedRef) {\n        const { instance  } = useElement(props).current;\n        useImperativeHandle(forwardedRef, ()=>instance);\n        return null;\n    }\n    return /*#__PURE__*/ forwardRef(LeafComponent);\n}\n","import { useAttribution } from './attribution.js';\nimport { useLeafletContext } from './context.js';\nimport { useEventHandlers } from './events.js';\nimport { withPane } from './pane.js';\nexport function createDivOverlayHook(useElement, useLifecycle) {\n    return function useDivOverlay(props, setOpen) {\n        const context = useLeafletContext();\n        const elementRef = useElement(withPane(props, context), context);\n        useAttribution(context.map, props.attribution);\n        useEventHandlers(elementRef.current, props.eventHandlers);\n        useLifecycle(elementRef.current, context, props, setOpen);\n        return elementRef;\n    };\n}\n","export function withPane(props, context) {\n    const pane = props.pane ?? context.pane;\n    return pane ? {\n        ...props,\n        pane\n    } : props;\n}\n","function _extends() {\n    _extends = Object.assign || function(target) {\n        for(var i = 1; i < arguments.length; i++){\n            var source = arguments[i];\n            for(var key in source){\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n        return target;\n    };\n    return _extends.apply(this, arguments);\n}\nimport { LeafletProvider, createLeafletContext } from '@react-leaflet/core';\nimport { Map as LeafletMap } from 'leaflet';\nimport React, { forwardRef, useCallback, useEffect, useImperativeHandle, useState } from 'react';\nfunction MapContainerComponent({ bounds , boundsOptions , center , children , className , id , placeholder , style , whenReady , zoom , ...options }, forwardedRef) {\n    const [props] = useState({\n        className,\n        id,\n        style\n    });\n    const [context, setContext] = useState(null);\n    useImperativeHandle(forwardedRef, ()=>context?.map ?? null, [\n        context\n    ]);\n    const mapRef = useCallback((node)=>{\n        if (node !== null && context === null) {\n            const map = new LeafletMap(node, options);\n            if (center != null && zoom != null) {\n                map.setView(center, zoom);\n            } else if (bounds != null) {\n                map.fitBounds(bounds, boundsOptions);\n            }\n            if (whenReady != null) {\n                map.whenReady(whenReady);\n            }\n            setContext(createLeafletContext(map));\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n    useEffect(()=>{\n        return ()=>{\n            context?.map.remove();\n        };\n    }, [\n        context\n    ]);\n    const contents = context ? /*#__PURE__*/ React.createElement(LeafletProvider, {\n        value: context\n    }, children) : placeholder ?? null;\n    return /*#__PURE__*/ React.createElement(\"div\", _extends({}, props, {\n        ref: mapRef\n    }), contents);\n}\nexport const MapContainer = /*#__PURE__*/ forwardRef(MapContainerComponent);\n","import { createElementObject, createLayerComponent, extendContext } from '@react-leaflet/core';\nimport { Marker as LeafletMarker } from 'leaflet';\nexport const Marker = createLayerComponent(function createMarker({ position , ...options }, ctx) {\n    const marker = new LeafletMarker(position, options);\n    return createElementObject(marker, extendContext(ctx, {\n        overlayContainer: marker\n    }));\n}, function updateMarker(marker, props, prevProps) {\n    if (props.position !== prevProps.position) {\n        marker.setLatLng(props.position);\n    }\n    if (props.icon != null && props.icon !== prevProps.icon) {\n        marker.setIcon(props.icon);\n    }\n    if (props.zIndexOffset != null && props.zIndexOffset !== prevProps.zIndexOffset) {\n        marker.setZIndexOffset(props.zIndexOffset);\n    }\n    if (props.opacity != null && props.opacity !== prevProps.opacity) {\n        marker.setOpacity(props.opacity);\n    }\n    if (marker.dragging != null && props.draggable !== prevProps.draggable) {\n        if (props.draggable === true) {\n            marker.dragging.enable();\n        } else {\n            marker.dragging.disable();\n        }\n    }\n});\n","import { createElementObject, createOverlayComponent } from '@react-leaflet/core';\nimport { Popup as LeafletPopup } from 'leaflet';\nimport { useEffect } from 'react';\nexport const Popup = createOverlayComponent(function createPopup(props, context) {\n    const popup = new LeafletPopup(props, context.overlayContainer);\n    return createElementObject(popup, context);\n}, function usePopupLifecycle(element, context, { position  }, setOpen) {\n    useEffect(function addPopup() {\n        const { instance  } = element;\n        function onPopupOpen(event) {\n            if (event.popup === instance) {\n                instance.update();\n                setOpen(true);\n            }\n        }\n        function onPopupClose(event) {\n            if (event.popup === instance) {\n                setOpen(false);\n            }\n        }\n        context.map.on({\n            popupopen: onPopupOpen,\n            popupclose: onPopupClose\n        });\n        if (context.overlayContainer == null) {\n            // Attach to a Map\n            if (position != null) {\n                instance.setLatLng(position);\n            }\n            instance.openOn(context.map);\n        } else {\n            // Attach to container component\n            context.overlayContainer.bindPopup(instance);\n        }\n        return function removePopup() {\n            context.map.off({\n                popupopen: onPopupOpen,\n                popupclose: onPopupClose\n            });\n            context.overlayContainer?.unbindPopup();\n            context.map.removeLayer(instance);\n        };\n    }, [\n        element,\n        context,\n        setOpen,\n        position\n    ]);\n});\n","import { createElementObject, createTileLayerComponent, updateGridLayer, withPane } from '@react-leaflet/core';\nimport { TileLayer as LeafletTileLayer } from 'leaflet';\nexport const TileLayer = createTileLayerComponent(function createTileLayer({ url , ...options }, context) {\n    const layer = new LeafletTileLayer(url, withPane(options, context));\n    return createElementObject(layer, context);\n}, function updateTileLayer(layer, props, prevProps) {\n    updateGridLayer(layer, props, prevProps);\n    const { url  } = props;\n    if (url != null && url !== prevProps.url) {\n        layer.setUrl(url);\n    }\n});\n","export function updateGridLayer(layer, props, prevProps) {\n    const { opacity , zIndex  } = props;\n    if (opacity != null && opacity !== prevProps.opacity) {\n        layer.setOpacity(opacity);\n    }\n    if (zIndex != null && zIndex !== prevProps.zIndex) {\n        layer.setZIndex(zIndex);\n    }\n}\n"],"names":["L","Default","prototype","_getIconUrl","mergeOptions","iconUrl","markerIcon","shadowUrl","markerShadow","iconSize","shadowSize","TerminalMap","locations","setLocations","useState","customIcon","iconAnchor","popupAnchor","visible","setVisible","useEffect","async","token","localStorage","getItem","response","fetch","method","headers","concat","ok","data","json","console","error","status","fetchLocations","_jsxs","CContainer","children","CAlert","color","closeButton","onShowChange","_jsx","href","className","MapContainer","center","zoom","style","height","width","TileLayer","url","attribution","map","location","Marker","position","locationLat","locationLng","icon","Popup","businessName","entityName","phone1","phone2","registerNo","createDate","terminalId","forwardRef","_a","ref","_b","dismissible","variant","_c","onClose","rest","__rest","alertRef","useRef","forkedRef","useForkedRef","_d","_visible","React","Transition","in","mountOnEnter","nodeRef","onExit","timeout","unmountOnExit","state","__assign","classNames","show","role","CCloseButton","onClick","propTypes","PropTypes","colorPropType","isRequired","displayName","CONTEXT_VERSION","createLeafletContext","Object","freeze","__version","extendContext","source","extra","LeafletContext","createContext","LeafletProvider","Provider","useLeafletContext","context","useContext","Error","createElementObject","instance","container","createElementHook","createElement","updateElement","props","elementRef","current","propsRef","useAttribution","attributionRef","attributionControl","removeAttribution","addAttribution","useEventHandlers","element","eventHandlers","eventHandlersRef","on","off","createLayerHook","useElement","withPane","_context$layerContain","layerContainer","addLayer","_context$layerContain2","removeLayer","useLayerLifecycle","createLayerComponent","ContainerComponent","forwardedRef","useImperativeHandle","value","createContainerComponent","createOverlayComponent","useLifecycle","useOverlay","setOpen","createDivOverlayHook","OverlayComponent","isOpen","update","contentNode","_contentNode","createPortal","createDivOverlayComponent","createTileLayerComponent","LeafComponent","createLeafComponent","_props$pane","pane","_extends","assign","target","i","arguments","length","key","hasOwnProperty","call","apply","this","MapContainerComponent","_ref","bounds","boundsOptions","id","placeholder","whenReady","options","setContext","_context$map","mapRef","useCallback","node","LeafletMap","setView","fitBounds","remove","contents","ctx","marker","LeafletMarker","overlayContainer","prevProps","setLatLng","setIcon","zIndexOffset","setZIndexOffset","opacity","setOpacity","dragging","draggable","enable","disable","popup","LeafletPopup","onPopupOpen","event","onPopupClose","popupopen","popupclose","openOn","bindPopup","_context$overlayConta","unbindPopup","layer","LeafletTileLayer","zIndex","setZIndex","updateGridLayer","setUrl"],"sourceRoot":""}