{"version":3,"file":"static/js/1961.04e2fbd9.chunk.js","mappings":"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","sources":["../node_modules/@coreui/react/dist/esm/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@coreui/react/dist/esm/node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","../node_modules/@coreui/react/dist/esm/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/@coreui/react/src/components/close-button/CCloseButton.tsx","../node_modules/@coreui/react/src/components/form/CForm.tsx","../node_modules/@coreui/react/src/hooks/useForkedRef.ts","../node_modules/@coreui/react-transition-group/esm/config.js","../node_modules/@coreui/react-transition-group/esm/TransitionGroupContext.js","../node_modules/@coreui/react-transition-group/esm/Transition.js","../node_modules/@coreui/react-transition-group/esm/utils/reflow.js"],"sourcesContent":["function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\n\nexport { _setPrototypeOf as default };\n//# sourceMappingURL=setPrototypeOf.js.map\n","import _setPrototypeOf from './setPrototypeOf.js';\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  _setPrototypeOf(subClass, superClass);\n}\n\nexport { _inheritsLoose as default };\n//# sourceMappingURL=inheritsLoose.js.map\n","function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\n\nexport { _objectWithoutPropertiesLoose as default };\n//# sourceMappingURL=objectWithoutPropertiesLoose.js.map\n","import React, { forwardRef, HTMLAttributes } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nexport interface CCloseButtonProps extends HTMLAttributes<HTMLButtonElement> {\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n  /**\n   * Invert the default color.\n   */\n  dark?: boolean\n  /**\n   * Toggle the disabled state for the component.\n   */\n  disabled?: boolean\n  /**\n   * Change the default color to white.\n   *\n   * @deprecated 5.0.0\n   */\n  white?: boolean\n}\n\nexport const CCloseButton = forwardRef<HTMLButtonElement, CCloseButtonProps>(\n  ({ className, dark, disabled, white, ...rest }, ref) => {\n    return (\n      <button\n        type=\"button\"\n        className={classNames(\n          'btn',\n          'btn-close',\n          {\n            'btn-close-white': white,\n          },\n          disabled,\n          className,\n        )}\n        aria-label=\"Close\"\n        disabled={disabled}\n        {...(dark && { 'data-coreui-theme': 'dark' })}\n        {...rest}\n        ref={ref}\n      />\n    )\n  },\n)\n\nCCloseButton.propTypes = {\n  className: PropTypes.string,\n  dark: PropTypes.bool,\n  disabled: PropTypes.bool,\n  white: PropTypes.bool,\n}\n\nCCloseButton.displayName = 'CCloseButton'\n","import React, { forwardRef, FormHTMLAttributes } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nexport interface CFormProps extends FormHTMLAttributes<HTMLFormElement> {\n  /**\n   * A string of all className you want applied to the component.\n   */\n  className?: string\n  /**\n   * Mark a form as validated. If you set it `true`, all validation styles will be applied to the forms component.\n   */\n  validated?: boolean\n}\n\nexport const CForm = forwardRef<HTMLFormElement, CFormProps>(\n  ({ children, className, validated, ...rest }, ref) => {\n    return (\n      <form\n        className={classNames({ 'was-validated': validated }, className) || undefined}\n        {...rest}\n        ref={ref}\n      >\n        {children}\n      </form>\n    )\n  },\n)\n\nCForm.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  validated: PropTypes.bool,\n}\n\nCForm.displayName = 'CForm'\n","// code borrowed from https://github.com/reach/reach-ui\n// problem described https://github.com/facebook/react/issues/13029\n\nimport { useMemo } from 'react'\n\nexport type AssignableRef<ValueType> =\n  | {\n      bivarianceHack(instance: ValueType | null): void\n    }['bivarianceHack']\n  | React.MutableRefObject<ValueType | null>\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function useForkedRef<RefValueType = any>(\n  ...refs: (AssignableRef<RefValueType> | null | undefined)[]\n) {\n  return useMemo(() => {\n    if (refs.every((ref) => ref == null)) {\n      return null\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (node: any) => {\n      refs.forEach((ref) => {\n        assignRef(ref, node)\n      })\n    }\n  }, refs)\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function assignRef<RefValueType = any>(\n  ref: AssignableRef<RefValueType> | null | undefined,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  value: any,\n) {\n  if (ref == null) return\n  if (isFunction(ref)) {\n    ref(value)\n  } else {\n    try {\n      ref.current = value\n    } catch {\n      throw new Error(`Cannot assign value \"${value}\" to ref \"${ref}\"`)\n    }\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/ban-types\nexport function isFunction(value: any): value is Function {\n  return !!(value && {}.toString.call(value) == '[object Function]')\n}\n","export default {\n  disabled: false\n};","import React from 'react';\nexport default React.createContext(null);","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport config from './config';\nimport { timeoutsShape } from './utils/PropTypes';\nimport TransitionGroupContext from './TransitionGroupContext';\nimport { forceReflow } from './utils/reflow';\nexport var UNMOUNTED = 'unmounted';\nexport var EXITED = 'exited';\nexport var ENTERING = 'entering';\nexport var ENTERED = 'entered';\nexport var EXITING = 'exiting';\n/**\n * The Transition component lets you describe a transition from one component\n * state to another _over time_ with a simple declarative API. Most commonly\n * it's used to animate the mounting and unmounting of a component, but can also\n * be used to describe in-place transition states as well.\n *\n * ---\n *\n * **Note**: `Transition` is a platform-agnostic base component. If you're using\n * transitions in CSS, you'll probably want to use\n * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)\n * instead. It inherits all the features of `Transition`, but contains\n * additional features necessary to play nice with CSS transitions (hence the\n * name of the component).\n *\n * ---\n *\n * By default the `Transition` component does not alter the behavior of the\n * component it renders, it only tracks \"enter\" and \"exit\" states for the\n * components. It's up to you to give meaning and effect to those states. For\n * example we can add styles to a component when it enters or exits:\n *\n * ```jsx\n * import { Transition } from 'react-transition-group';\n *\n * const duration = 300;\n *\n * const defaultStyle = {\n *   transition: `opacity ${duration}ms ease-in-out`,\n *   opacity: 0,\n * }\n *\n * const transitionStyles = {\n *   entering: { opacity: 1 },\n *   entered:  { opacity: 1 },\n *   exiting:  { opacity: 0 },\n *   exited:  { opacity: 0 },\n * };\n *\n * const Fade = ({ in: inProp }) => (\n *   <Transition in={inProp} timeout={duration}>\n *     {state => (\n *       <div style={{\n *         ...defaultStyle,\n *         ...transitionStyles[state]\n *       }}>\n *         I'm a fade Transition!\n *       </div>\n *     )}\n *   </Transition>\n * );\n * ```\n *\n * There are 4 main states a Transition can be in:\n *  - `'entering'`\n *  - `'entered'`\n *  - `'exiting'`\n *  - `'exited'`\n *\n * Transition state is toggled via the `in` prop. When `true` the component\n * begins the \"Enter\" stage. During this stage, the component will shift from\n * its current transition state, to `'entering'` for the duration of the\n * transition and then to the `'entered'` stage once it's complete. Let's take\n * the following example (we'll use the\n * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <Transition in={inProp} timeout={500}>\n *         {state => (\n *           // ...\n *         )}\n *       </Transition>\n *       <button onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the button is clicked the component will shift to the `'entering'` state\n * and stay there for 500ms (the value of `timeout`) before it finally switches\n * to `'entered'`.\n *\n * When `in` is `false` the same thing happens except the state moves from\n * `'exiting'` to `'exited'`.\n */\n\nvar Transition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Transition, _React$Component);\n\n  function Transition(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    var parentGroup = context; // In the context of a TransitionGroup all enters are really appears\n\n    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;\n    var initialStatus;\n    _this.appearStatus = null;\n\n    if (props.in) {\n      if (appear) {\n        initialStatus = EXITED;\n        _this.appearStatus = ENTERING;\n      } else {\n        initialStatus = ENTERED;\n      }\n    } else {\n      if (props.unmountOnExit || props.mountOnEnter) {\n        initialStatus = UNMOUNTED;\n      } else {\n        initialStatus = EXITED;\n      }\n    }\n\n    _this.state = {\n      status: initialStatus\n    };\n    _this.nextCallback = null;\n    return _this;\n  }\n\n  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\n    var nextIn = _ref.in;\n\n    if (nextIn && prevState.status === UNMOUNTED) {\n      return {\n        status: EXITED\n      };\n    }\n\n    return null;\n  } // getSnapshotBeforeUpdate(prevProps) {\n  //   let nextStatus = null\n  //   if (prevProps !== this.props) {\n  //     const { status } = this.state\n  //     if (this.props.in) {\n  //       if (status !== ENTERING && status !== ENTERED) {\n  //         nextStatus = ENTERING\n  //       }\n  //     } else {\n  //       if (status === ENTERING || status === ENTERED) {\n  //         nextStatus = EXITING\n  //       }\n  //     }\n  //   }\n  //   return { nextStatus }\n  // }\n  ;\n\n  var _proto = Transition.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.updateStatus(true, this.appearStatus);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var nextStatus = null;\n\n    if (prevProps !== this.props) {\n      var status = this.state.status;\n\n      if (this.props.in) {\n        if (status !== ENTERING && status !== ENTERED) {\n          nextStatus = ENTERING;\n        }\n      } else {\n        if (status === ENTERING || status === ENTERED) {\n          nextStatus = EXITING;\n        }\n      }\n    }\n\n    this.updateStatus(false, nextStatus);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.cancelNextCallback();\n  };\n\n  _proto.getTimeouts = function getTimeouts() {\n    var timeout = this.props.timeout;\n    var exit, enter, appear;\n    exit = enter = appear = timeout;\n\n    if (timeout != null && typeof timeout !== 'number') {\n      exit = timeout.exit;\n      enter = timeout.enter; // TODO: remove fallback for next major\n\n      appear = timeout.appear !== undefined ? timeout.appear : enter;\n    }\n\n    return {\n      exit: exit,\n      enter: enter,\n      appear: appear\n    };\n  };\n\n  _proto.updateStatus = function updateStatus(mounting, nextStatus) {\n    if (mounting === void 0) {\n      mounting = false;\n    }\n\n    if (nextStatus !== null) {\n      // nextStatus will always be ENTERING or EXITING.\n      this.cancelNextCallback();\n\n      if (nextStatus === ENTERING) {\n        if (this.props.unmountOnExit || this.props.mountOnEnter) {\n          var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this); // https://github.com/reactjs/react-transition-group/pull/749\n          // With unmountOnExit or mountOnEnter, the enter animation should happen at the transition between `exited` and `entering`.\n          // To make the animation happen,  we have to separate each rendering and avoid being processed as batched.\n\n          if (node) forceReflow(node);\n        }\n\n        this.performEnter(mounting);\n      } else {\n        this.performExit();\n      }\n    } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n      this.setState({\n        status: UNMOUNTED\n      });\n    }\n  };\n\n  _proto.performEnter = function performEnter(mounting) {\n    var _this2 = this;\n\n    var enter = this.props.enter;\n    var appearing = this.context ? this.context.isMounting : mounting;\n\n    var _ref2 = this.props.nodeRef ? [appearing] : [ReactDOM.findDOMNode(this), appearing],\n        maybeNode = _ref2[0],\n        maybeAppearing = _ref2[1];\n\n    var timeouts = this.getTimeouts();\n    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED\n    // if we are mounting and running this it means appear _must_ be set\n\n    if (!mounting && !enter || config.disabled) {\n      this.safeSetState({\n        status: ENTERED\n      }, function () {\n        _this2.props.onEntered(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onEnter(maybeNode, maybeAppearing);\n    this.safeSetState({\n      status: ENTERING\n    }, function () {\n      _this2.props.onEntering(maybeNode, maybeAppearing);\n\n      _this2.onTransitionEnd(enterTimeout, function () {\n        _this2.safeSetState({\n          status: ENTERED\n        }, function () {\n          _this2.props.onEntered(maybeNode, maybeAppearing);\n        });\n      });\n    });\n  };\n\n  _proto.performExit = function performExit() {\n    var _this3 = this;\n\n    var exit = this.props.exit;\n    var timeouts = this.getTimeouts();\n    var maybeNode = this.props.nodeRef ? undefined : ReactDOM.findDOMNode(this); // no exit animation skip right to EXITED\n\n    if (!exit || config.disabled) {\n      this.safeSetState({\n        status: EXITED\n      }, function () {\n        _this3.props.onExited(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onExit(maybeNode);\n    this.safeSetState({\n      status: EXITING\n    }, function () {\n      _this3.props.onExiting(maybeNode);\n\n      _this3.onTransitionEnd(timeouts.exit, function () {\n        _this3.safeSetState({\n          status: EXITED\n        }, function () {\n          _this3.props.onExited(maybeNode);\n        });\n      });\n    });\n  };\n\n  _proto.cancelNextCallback = function cancelNextCallback() {\n    if (this.nextCallback !== null) {\n      this.nextCallback.cancel();\n      this.nextCallback = null;\n    }\n  };\n\n  _proto.safeSetState = function safeSetState(nextState, callback) {\n    // This shouldn't be necessary, but there are weird race conditions with\n    // setState callbacks and unmounting in testing, so always make sure that\n    // we can cancel any pending setState callbacks after we unmount.\n    callback = this.setNextCallback(callback);\n    this.setState(nextState, callback);\n  };\n\n  _proto.setNextCallback = function setNextCallback(callback) {\n    var _this4 = this;\n\n    var active = true;\n\n    this.nextCallback = function (event) {\n      if (active) {\n        active = false;\n        _this4.nextCallback = null;\n        callback(event);\n      }\n    };\n\n    this.nextCallback.cancel = function () {\n      active = false;\n    };\n\n    return this.nextCallback;\n  };\n\n  _proto.onTransitionEnd = function onTransitionEnd(timeout, handler) {\n    this.setNextCallback(handler);\n    var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this);\n    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;\n\n    if (!node || doesNotHaveTimeoutOrListener) {\n      setTimeout(this.nextCallback, 0);\n      return;\n    }\n\n    if (this.props.addEndListener) {\n      var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node, this.nextCallback],\n          maybeNode = _ref3[0],\n          maybeNextCallback = _ref3[1];\n\n      this.props.addEndListener(maybeNode, maybeNextCallback);\n    }\n\n    if (timeout != null) {\n      setTimeout(this.nextCallback, timeout);\n    }\n  };\n\n  _proto.render = function render() {\n    var status = this.state.status;\n\n    if (status === UNMOUNTED) {\n      return null;\n    }\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        _in = _this$props.in,\n        _mountOnEnter = _this$props.mountOnEnter,\n        _unmountOnExit = _this$props.unmountOnExit,\n        _appear = _this$props.appear,\n        _enter = _this$props.enter,\n        _exit = _this$props.exit,\n        _timeout = _this$props.timeout,\n        _addEndListener = _this$props.addEndListener,\n        _onEnter = _this$props.onEnter,\n        _onEntering = _this$props.onEntering,\n        _onEntered = _this$props.onEntered,\n        _onExit = _this$props.onExit,\n        _onExiting = _this$props.onExiting,\n        _onExited = _this$props.onExited,\n        _nodeRef = _this$props.nodeRef,\n        childProps = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"in\", \"mountOnEnter\", \"unmountOnExit\", \"appear\", \"enter\", \"exit\", \"timeout\", \"addEndListener\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"nodeRef\"]);\n\n    return (\n      /*#__PURE__*/\n      // allows for nested Transitions\n      React.createElement(TransitionGroupContext.Provider, {\n        value: null\n      }, typeof children === 'function' ? children(status, childProps) : React.cloneElement(React.Children.only(children), childProps))\n    );\n  };\n\n  return Transition;\n}(React.Component);\n\nTransition.contextType = TransitionGroupContext;\nTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * A React reference to DOM element that need to transition:\n   * https://stackoverflow.com/a/51127130/4671932\n   *\n   *   - When `nodeRef` prop is used, `node` is not passed to callback functions\n   *      (e.g. `onEnter`) because user already has direct access to the node.\n   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new\n   *     `nodeRef` need to be provided to `Transition` with changed `key` prop\n   *     (see\n   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).\n   */\n  nodeRef: PropTypes.shape({\n    current: typeof Element === 'undefined' ? PropTypes.any : function (propValue, key, componentName, location, propFullName, secret) {\n      var value = propValue[key];\n      return PropTypes.instanceOf(value && 'ownerDocument' in value ? value.ownerDocument.defaultView.Element : Element)(propValue, key, componentName, location, propFullName, secret);\n    }\n  }),\n\n  /**\n   * A `function` child can be used instead of a React element. This function is\n   * called with the current transition status (`'entering'`, `'entered'`,\n   * `'exiting'`, `'exited'`), which can be used to apply context\n   * specific props to a component.\n   *\n   * ```jsx\n   * <Transition in={this.state.in} timeout={150}>\n   *   {state => (\n   *     <MyComponent className={`fade fade-${state}`} />\n   *   )}\n   * </Transition>\n   * ```\n   */\n  children: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.element.isRequired]).isRequired,\n\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in: PropTypes.bool,\n\n  /**\n   * By default the child component is mounted immediately along with\n   * the parent `Transition` component. If you want to \"lazy mount\" the component on the\n   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay\n   * mounted, even on \"exited\", unless you also specify `unmountOnExit`.\n   */\n  mountOnEnter: PropTypes.bool,\n\n  /**\n   * By default the child component stays mounted after it reaches the `'exited'` state.\n   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.\n   */\n  unmountOnExit: PropTypes.bool,\n\n  /**\n   * By default the child component does not perform the enter transition when\n   * it first mounts, regardless of the value of `in`. If you want this\n   * behavior, set both `appear` and `in` to `true`.\n   *\n   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop\n   * > only adds an additional enter transition. However, in the\n   * > `<CSSTransition>` component that first enter transition does result in\n   * > additional `.appear-*` classes, that way you can choose to style it\n   * > differently.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * Enable or disable enter transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * Enable or disable exit transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * The duration of the transition, in milliseconds.\n   * Required unless `addEndListener` is provided.\n   *\n   * You may specify a single timeout for all transitions:\n   *\n   * ```jsx\n   * timeout={500}\n   * ```\n   *\n   * or individually:\n   *\n   * ```jsx\n   * timeout={{\n   *  appear: 500,\n   *  enter: 300,\n   *  exit: 500,\n   * }}\n   * ```\n   *\n   * - `appear` defaults to the value of `enter`\n   * - `enter` defaults to `0`\n   * - `exit` defaults to `0`\n   *\n   * @type {number | { enter?: number, exit?: number, appear?: number }}\n   */\n  timeout: function timeout(props) {\n    var pt = timeoutsShape;\n    if (!props.addEndListener) pt = pt.isRequired;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return pt.apply(void 0, [props].concat(args));\n  },\n\n  /**\n   * Add a custom transition end trigger. Called with the transitioning\n   * DOM node and a `done` callback. Allows for more fine grained transition end\n   * logic. Timeouts are still used as a fallback if provided.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * ```jsx\n   * addEndListener={(node, done) => {\n   *   // use the css transitionend event to mark the finish of a transition\n   *   node.addEventListener('transitionend', done, false);\n   * }}\n   * ```\n   */\n  addEndListener: PropTypes.func,\n\n  /**\n   * Callback fired before the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entered\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired before the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exited\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExited: PropTypes.func\n} : {}; // Name the function so it is clearer in the documentation\n\nfunction noop() {}\n\nTransition.defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  onEnter: noop,\n  onEntering: noop,\n  onEntered: noop,\n  onExit: noop,\n  onExiting: noop,\n  onExited: noop\n};\nTransition.UNMOUNTED = UNMOUNTED;\nTransition.EXITED = EXITED;\nTransition.ENTERING = ENTERING;\nTransition.ENTERED = ENTERED;\nTransition.EXITING = EXITING;\nexport default Transition;","export var forceReflow = function forceReflow(node) {\n  return node.scrollTop;\n};"],"names":["_setPrototypeOf","o","p","Object","setPrototypeOf","bind","__proto__","_inheritsLoose","subClass","superClass","prototype","create","constructor","_objectWithoutPropertiesLoose","source","excluded","key","i","target","sourceKeys","keys","length","indexOf","CCloseButton","forwardRef","_a","ref","className","dark","disabled","white","rest","__rest","React","__assign","type","classNames","propTypes","PropTypes","displayName","CForm","children","validated","undefined","useForkedRef","refs","_i","arguments","useMemo","every","node","forEach","value","toString","call","isFunction","current","Error","concat","assignRef","config","TransitionGroupContext","UNMOUNTED","EXITED","ENTERING","ENTERED","EXITING","Transition","_React$Component","props","context","_this","this","initialStatus","appear","isMounting","enter","appearStatus","in","unmountOnExit","mountOnEnter","state","status","nextCallback","getDerivedStateFromProps","_ref","prevState","_proto","componentDidMount","updateStatus","componentDidUpdate","prevProps","nextStatus","componentWillUnmount","cancelNextCallback","getTimeouts","exit","timeout","mounting","nodeRef","ReactDOM","forceReflow","performEnter","performExit","setState","_this2","appearing","_ref2","maybeNode","maybeAppearing","timeouts","enterTimeout","safeSetState","onEntered","onEnter","onEntering","onTransitionEnd","_this3","onExit","onExiting","onExited","cancel","nextState","callback","setNextCallback","_this4","active","event","handler","doesNotHaveTimeoutOrListener","addEndListener","_ref3","maybeNextCallback","setTimeout","render","_this$props","childProps","Provider","only","noop","contextType","defaultProps","scrollTop"],"sourceRoot":""}