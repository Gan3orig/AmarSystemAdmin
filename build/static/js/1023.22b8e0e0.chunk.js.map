{"version":3,"file":"static/js/1023.22b8e0e0.chunk.js","mappings":"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","sources":["views/admin/terminalMap.js","../node_modules/@react-leaflet/core/lib/context.js","../node_modules/@react-leaflet/core/lib/element.js","../node_modules/@react-leaflet/core/lib/attribution.js","../node_modules/@react-leaflet/core/lib/events.js","../node_modules/@react-leaflet/core/lib/layer.js","../node_modules/@react-leaflet/core/lib/generic.js","../node_modules/@react-leaflet/core/lib/component.js","../node_modules/@react-leaflet/core/lib/div-overlay.js","../node_modules/@react-leaflet/core/lib/pane.js","../node_modules/react-leaflet/lib/MapContainer.js","../node_modules/react-leaflet/lib/Marker.js","../node_modules/react-leaflet/lib/Popup.js","../node_modules/react-leaflet/lib/TileLayer.js","../node_modules/@react-leaflet/core/lib/grid-layer.js"],"sourcesContent":["//import React from 'react';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\n//import React, { useEffect, useState } from 'react';\r\nimport L from 'leaflet';\r\nimport markerIcon from 'src/assets/images/marker.png';\r\nimport markerShadow from 'leaflet/dist/images/marker-shadow.png';\r\n\r\n\r\n// Fix for default marker icons in Leaflet\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\n\r\nL.Icon.Default.mergeOptions({\r\n  iconUrl: markerIcon,\r\n  shadowUrl: markerShadow,\r\n  iconSize: [20, 20],\r\n  shadowSize: [12, 12]\r\n});\r\n\r\nconst TerminalMap = () => {\r\n  //const position = [47.8914133262357,106.896511316299]; // Default position (latitude, longitude)\r\n  const [locations, setLocations] = useState([]);\r\n  const customIcon = new L.Icon({\r\n    iconUrl: markerIcon,\r\n    iconSize: [20, 20],\r\n    iconAnchor: [21, 21],\r\n    popupAnchor: [1, -34],\r\n    shadowUrl: markerShadow,\r\n    shadowSize: [12, 12]\r\n  });\r\n  //const token = localStorage.getItem('token');\r\n  // Fetch JSON data on component mount\r\n  // useEffect(() => {\r\n  //   fetch('https://api.majorsoft.mn/api/terminalMap')\r\n  //     .then(response => response.json())\r\n  //     .then(data => setLocations(data))\r\n  //     .catch(error => console.error('Error fetching locations:', error));\r\n  // }, []);\r\n  useEffect(() => {\r\n    const fetchLocations = async () => {\r\n      const token = localStorage.getItem('token'); // Retrieve the Bearer token from localStorage or another storage mechanism\r\n\r\n      try {\r\n        const response = await fetch('https://api.majorsoft.mn/api/terminalMap', {\r\n          method: 'GET',\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`, // Attach the token to the Authorization header\r\n            'Content-Type': 'application/json'\r\n          }\r\n        });\r\n\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setLocations(data); // Update state with the fetched data\r\n        } else {\r\n          console.error('Failed to fetch locations:', response.status);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching locations:', error);\r\n      }\r\n    };\r\n\r\n    fetchLocations(); // Call the async function to fetch data\r\n  }, []);\r\n  return (\r\n    <MapContainer center={[47, 106]} zoom={6} style={{ height: '80vh', width: '100%' }}>\r\n      <TileLayer\r\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n      />\r\n      {locations.map(location => (\r\n        <Marker key={location.terminalId} position={[location.locationLat, location.locationLng]} icon={customIcon} >\r\n          <Popup>\r\n            <strong>{location.businessName}</strong><br />\r\n            {location.entityName}\r\n            <br/>✆{location.phone1},{location.phone2}\r\n            <br/>®{location.registerNo}\r\n            <br/>{location.createDate}\r\n          </Popup>\r\n        </Marker>\r\n      ))}\r\n    </MapContainer>\r\n  );\r\n};\r\n\r\nexport default TerminalMap;\r\n","import { createContext, useContext } from 'react';\nexport const CONTEXT_VERSION = 1;\nexport function createLeafletContext(map) {\n    return Object.freeze({\n        __version: CONTEXT_VERSION,\n        map\n    });\n}\nexport function extendContext(source, extra) {\n    return Object.freeze({\n        ...source,\n        ...extra\n    });\n}\nexport const LeafletContext = createContext(null);\nexport const LeafletProvider = LeafletContext.Provider;\nexport function useLeafletContext() {\n    const context = useContext(LeafletContext);\n    if (context == null) {\n        throw new Error('No context provided: useLeafletContext() can only be used in a descendant of <MapContainer>');\n    }\n    return context;\n}\n","import { useEffect, useRef } from 'react';\nexport function createElementObject(instance, context, container) {\n    return Object.freeze({\n        instance,\n        context,\n        container\n    });\n}\nexport function createElementHook(createElement, updateElement) {\n    if (updateElement == null) {\n        return function useImmutableLeafletElement(props, context) {\n            const elementRef = useRef();\n            if (!elementRef.current) elementRef.current = createElement(props, context);\n            return elementRef;\n        };\n    }\n    return function useMutableLeafletElement(props, context) {\n        const elementRef = useRef();\n        if (!elementRef.current) elementRef.current = createElement(props, context);\n        const propsRef = useRef(props);\n        const { instance  } = elementRef.current;\n        useEffect(function updateElementProps() {\n            if (propsRef.current !== props) {\n                updateElement(instance, props, propsRef.current);\n                propsRef.current = props;\n            }\n        }, [\n            instance,\n            props,\n            context\n        ]);\n        return elementRef;\n    };\n}\n","import { useEffect, useRef } from 'react';\nexport function useAttribution(map, attribution) {\n    const attributionRef = useRef(attribution);\n    useEffect(function updateAttribution() {\n        if (attribution !== attributionRef.current && map.attributionControl != null) {\n            if (attributionRef.current != null) {\n                map.attributionControl.removeAttribution(attributionRef.current);\n            }\n            if (attribution != null) {\n                map.attributionControl.addAttribution(attribution);\n            }\n        }\n        attributionRef.current = attribution;\n    }, [\n        map,\n        attribution\n    ]);\n}\n","import { useEffect, useRef } from 'react';\nexport function useEventHandlers(element, eventHandlers) {\n    const eventHandlersRef = useRef();\n    useEffect(function addEventHandlers() {\n        if (eventHandlers != null) {\n            element.instance.on(eventHandlers);\n        }\n        eventHandlersRef.current = eventHandlers;\n        return function removeEventHandlers() {\n            if (eventHandlersRef.current != null) {\n                element.instance.off(eventHandlersRef.current);\n            }\n            eventHandlersRef.current = null;\n        };\n    }, [\n        element,\n        eventHandlers\n    ]);\n}\n","import { useEffect } from 'react';\nimport { useAttribution } from './attribution.js';\nimport { useLeafletContext } from './context.js';\nimport { useEventHandlers } from './events.js';\nimport { withPane } from './pane.js';\nexport function useLayerLifecycle(element, context) {\n    useEffect(function addLayer() {\n        const container = context.layerContainer ?? context.map;\n        container.addLayer(element.instance);\n        return function removeLayer() {\n            context.layerContainer?.removeLayer(element.instance);\n            context.map.removeLayer(element.instance);\n        };\n    }, [\n        context,\n        element\n    ]);\n}\nexport function createLayerHook(useElement) {\n    return function useLayer(props) {\n        const context = useLeafletContext();\n        const elementRef = useElement(withPane(props, context), context);\n        useAttribution(context.map, props.attribution);\n        useEventHandlers(elementRef.current, props.eventHandlers);\n        useLayerLifecycle(elementRef.current, context);\n        return elementRef;\n    };\n}\n","import { createContainerComponent, createDivOverlayComponent, createLeafComponent } from './component.js';\nimport { createControlHook } from './control.js';\nimport { createElementHook, createElementObject } from './element.js';\nimport { createLayerHook } from './layer.js';\nimport { createDivOverlayHook } from './div-overlay.js';\nimport { createPathHook } from './path.js';\nexport function createControlComponent(createInstance) {\n    function createElement(props, context) {\n        return createElementObject(createInstance(props), context);\n    }\n    const useElement = createElementHook(createElement);\n    const useControl = createControlHook(useElement);\n    return createLeafComponent(useControl);\n}\nexport function createLayerComponent(createElement, updateElement) {\n    const useElement = createElementHook(createElement, updateElement);\n    const useLayer = createLayerHook(useElement);\n    return createContainerComponent(useLayer);\n}\nexport function createOverlayComponent(createElement, useLifecycle) {\n    const useElement = createElementHook(createElement);\n    const useOverlay = createDivOverlayHook(useElement, useLifecycle);\n    return createDivOverlayComponent(useOverlay);\n}\nexport function createPathComponent(createElement, updateElement) {\n    const useElement = createElementHook(createElement, updateElement);\n    const usePath = createPathHook(useElement);\n    return createContainerComponent(usePath);\n}\nexport function createTileLayerComponent(createElement, updateElement) {\n    const useElement = createElementHook(createElement, updateElement);\n    const useLayer = createLayerHook(useElement);\n    return createLeafComponent(useLayer);\n}\n","import React, { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { LeafletProvider } from './context.js';\nexport function createContainerComponent(useElement) {\n    function ContainerComponent(props, forwardedRef) {\n        const { instance , context  } = useElement(props).current;\n        useImperativeHandle(forwardedRef, ()=>instance);\n        return props.children == null ? null : /*#__PURE__*/ React.createElement(LeafletProvider, {\n            value: context\n        }, props.children);\n    }\n    return /*#__PURE__*/ forwardRef(ContainerComponent);\n}\nexport function createDivOverlayComponent(useElement) {\n    function OverlayComponent(props, forwardedRef) {\n        const [isOpen, setOpen] = useState(false);\n        const { instance  } = useElement(props, setOpen).current;\n        useImperativeHandle(forwardedRef, ()=>instance);\n        useEffect(function updateOverlay() {\n            if (isOpen) {\n                instance.update();\n            }\n        }, [\n            instance,\n            isOpen,\n            props.children\n        ]);\n        // @ts-ignore _contentNode missing in type definition\n        const contentNode = instance._contentNode;\n        return contentNode ? /*#__PURE__*/ createPortal(props.children, contentNode) : null;\n    }\n    return /*#__PURE__*/ forwardRef(OverlayComponent);\n}\nexport function createLeafComponent(useElement) {\n    function LeafComponent(props, forwardedRef) {\n        const { instance  } = useElement(props).current;\n        useImperativeHandle(forwardedRef, ()=>instance);\n        return null;\n    }\n    return /*#__PURE__*/ forwardRef(LeafComponent);\n}\n","import { useAttribution } from './attribution.js';\nimport { useLeafletContext } from './context.js';\nimport { useEventHandlers } from './events.js';\nimport { withPane } from './pane.js';\nexport function createDivOverlayHook(useElement, useLifecycle) {\n    return function useDivOverlay(props, setOpen) {\n        const context = useLeafletContext();\n        const elementRef = useElement(withPane(props, context), context);\n        useAttribution(context.map, props.attribution);\n        useEventHandlers(elementRef.current, props.eventHandlers);\n        useLifecycle(elementRef.current, context, props, setOpen);\n        return elementRef;\n    };\n}\n","export function withPane(props, context) {\n    const pane = props.pane ?? context.pane;\n    return pane ? {\n        ...props,\n        pane\n    } : props;\n}\n","function _extends() {\n    _extends = Object.assign || function(target) {\n        for(var i = 1; i < arguments.length; i++){\n            var source = arguments[i];\n            for(var key in source){\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n        return target;\n    };\n    return _extends.apply(this, arguments);\n}\nimport { LeafletProvider, createLeafletContext } from '@react-leaflet/core';\nimport { Map as LeafletMap } from 'leaflet';\nimport React, { forwardRef, useCallback, useEffect, useImperativeHandle, useState } from 'react';\nfunction MapContainerComponent({ bounds , boundsOptions , center , children , className , id , placeholder , style , whenReady , zoom , ...options }, forwardedRef) {\n    const [props] = useState({\n        className,\n        id,\n        style\n    });\n    const [context, setContext] = useState(null);\n    useImperativeHandle(forwardedRef, ()=>context?.map ?? null, [\n        context\n    ]);\n    const mapRef = useCallback((node)=>{\n        if (node !== null && context === null) {\n            const map = new LeafletMap(node, options);\n            if (center != null && zoom != null) {\n                map.setView(center, zoom);\n            } else if (bounds != null) {\n                map.fitBounds(bounds, boundsOptions);\n            }\n            if (whenReady != null) {\n                map.whenReady(whenReady);\n            }\n            setContext(createLeafletContext(map));\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n    useEffect(()=>{\n        return ()=>{\n            context?.map.remove();\n        };\n    }, [\n        context\n    ]);\n    const contents = context ? /*#__PURE__*/ React.createElement(LeafletProvider, {\n        value: context\n    }, children) : placeholder ?? null;\n    return /*#__PURE__*/ React.createElement(\"div\", _extends({}, props, {\n        ref: mapRef\n    }), contents);\n}\nexport const MapContainer = /*#__PURE__*/ forwardRef(MapContainerComponent);\n","import { createElementObject, createLayerComponent, extendContext } from '@react-leaflet/core';\nimport { Marker as LeafletMarker } from 'leaflet';\nexport const Marker = createLayerComponent(function createMarker({ position , ...options }, ctx) {\n    const marker = new LeafletMarker(position, options);\n    return createElementObject(marker, extendContext(ctx, {\n        overlayContainer: marker\n    }));\n}, function updateMarker(marker, props, prevProps) {\n    if (props.position !== prevProps.position) {\n        marker.setLatLng(props.position);\n    }\n    if (props.icon != null && props.icon !== prevProps.icon) {\n        marker.setIcon(props.icon);\n    }\n    if (props.zIndexOffset != null && props.zIndexOffset !== prevProps.zIndexOffset) {\n        marker.setZIndexOffset(props.zIndexOffset);\n    }\n    if (props.opacity != null && props.opacity !== prevProps.opacity) {\n        marker.setOpacity(props.opacity);\n    }\n    if (marker.dragging != null && props.draggable !== prevProps.draggable) {\n        if (props.draggable === true) {\n            marker.dragging.enable();\n        } else {\n            marker.dragging.disable();\n        }\n    }\n});\n","import { createElementObject, createOverlayComponent } from '@react-leaflet/core';\nimport { Popup as LeafletPopup } from 'leaflet';\nimport { useEffect } from 'react';\nexport const Popup = createOverlayComponent(function createPopup(props, context) {\n    const popup = new LeafletPopup(props, context.overlayContainer);\n    return createElementObject(popup, context);\n}, function usePopupLifecycle(element, context, { position  }, setOpen) {\n    useEffect(function addPopup() {\n        const { instance  } = element;\n        function onPopupOpen(event) {\n            if (event.popup === instance) {\n                instance.update();\n                setOpen(true);\n            }\n        }\n        function onPopupClose(event) {\n            if (event.popup === instance) {\n                setOpen(false);\n            }\n        }\n        context.map.on({\n            popupopen: onPopupOpen,\n            popupclose: onPopupClose\n        });\n        if (context.overlayContainer == null) {\n            // Attach to a Map\n            if (position != null) {\n                instance.setLatLng(position);\n            }\n            instance.openOn(context.map);\n        } else {\n            // Attach to container component\n            context.overlayContainer.bindPopup(instance);\n        }\n        return function removePopup() {\n            context.map.off({\n                popupopen: onPopupOpen,\n                popupclose: onPopupClose\n            });\n            context.overlayContainer?.unbindPopup();\n            context.map.removeLayer(instance);\n        };\n    }, [\n        element,\n        context,\n        setOpen,\n        position\n    ]);\n});\n","import { createElementObject, createTileLayerComponent, updateGridLayer, withPane } from '@react-leaflet/core';\nimport { TileLayer as LeafletTileLayer } from 'leaflet';\nexport const TileLayer = createTileLayerComponent(function createTileLayer({ url , ...options }, context) {\n    const layer = new LeafletTileLayer(url, withPane(options, context));\n    return createElementObject(layer, context);\n}, function updateTileLayer(layer, props, prevProps) {\n    updateGridLayer(layer, props, prevProps);\n    const { url  } = props;\n    if (url != null && url !== prevProps.url) {\n        layer.setUrl(url);\n    }\n});\n","export function updateGridLayer(layer, props, prevProps) {\n    const { opacity , zIndex  } = props;\n    if (opacity != null && opacity !== prevProps.opacity) {\n        layer.setOpacity(opacity);\n    }\n    if (zIndex != null && zIndex !== prevProps.zIndex) {\n        layer.setZIndex(zIndex);\n    }\n}\n"],"names":["L","Default","prototype","_getIconUrl","mergeOptions","iconUrl","markerIcon","shadowUrl","markerShadow","iconSize","shadowSize","TerminalMap","locations","setLocations","useState","customIcon","iconAnchor","popupAnchor","useEffect","async","token","localStorage","getItem","response","fetch","method","headers","concat","ok","data","json","console","error","status","fetchLocations","_jsxs","MapContainer","center","zoom","style","height","width","children","_jsx","TileLayer","url","attribution","map","location","Marker","position","locationLat","locationLng","icon","Popup","businessName","entityName","phone1","phone2","registerNo","createDate","terminalId","CONTEXT_VERSION","createLeafletContext","Object","freeze","__version","extendContext","source","extra","LeafletContext","createContext","LeafletProvider","Provider","useLeafletContext","context","useContext","Error","createElementObject","instance","container","createElementHook","createElement","updateElement","props","elementRef","useRef","current","propsRef","useAttribution","attributionRef","attributionControl","removeAttribution","addAttribution","useEventHandlers","element","eventHandlers","eventHandlersRef","on","off","createLayerHook","useElement","withPane","_context$layerContain","layerContainer","addLayer","_context$layerContain2","removeLayer","useLayerLifecycle","createLayerComponent","ContainerComponent","forwardedRef","useImperativeHandle","React","value","forwardRef","createContainerComponent","createOverlayComponent","useLifecycle","useOverlay","setOpen","createDivOverlayHook","OverlayComponent","isOpen","update","contentNode","_contentNode","createPortal","createDivOverlayComponent","createTileLayerComponent","LeafComponent","createLeafComponent","_props$pane","pane","_extends","assign","target","i","arguments","length","key","hasOwnProperty","call","apply","this","MapContainerComponent","_ref","bounds","boundsOptions","className","id","placeholder","whenReady","options","setContext","_context$map","mapRef","useCallback","node","LeafletMap","setView","fitBounds","remove","contents","ref","ctx","marker","LeafletMarker","overlayContainer","prevProps","setLatLng","setIcon","zIndexOffset","setZIndexOffset","opacity","setOpacity","dragging","draggable","enable","disable","popup","LeafletPopup","onPopupOpen","event","onPopupClose","popupopen","popupclose","openOn","bindPopup","_context$overlayConta","unbindPopup","layer","LeafletTileLayer","zIndex","setZIndex","updateGridLayer","setUrl"],"sourceRoot":""}